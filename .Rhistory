sol@obs_stats$counts
Xp = data.frame(self=factor("noself",levels=c("noself","self")),din=10000,dout=10000,v=1,dist=seq(5000,500000,length.out = 2000))
Xpm = model.matrix(log(v)~ self+log(din)+log(dout)+bs(log(dist),3),data=Xp)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=sol@cl),alpha=0.2)+
geom_abline(color='red')+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
Xp = data.frame(self=factor("noself",levels=c("noself","self")),din=10000,dout=10000,v=1,dist=seq(5000,500000,length.out = 2000))
Xpm = model.matrix(log(v)~ self+log(din)+log(dout)+blog(dist),data=Xp)
ycl=Xpm%*%MU
Xpm = model.matrix(log(v)~ self+log(din)+log(dout)+log(dist),data=Xp)
ycl=Xpm%*%MU
dplot=data.frame(d=Xp$dist,y1=ycl[,1],y2=ycl[,2],y3=ycl[,3])
ggplot(dplot)+geom_line(aes(x=d/1000,y=y1),color='red')+geom_line(aes(x=d/1000,y=y2),color='blue')+geom_line(aes(x=d/1000,y=y3),color='green')
sol@obs_stats$counts
Xn=cbind(X[,1:2],apply(X[,3:ncol(X)],2,function(v){scale(v)}))
sol=greed_cond(Xn,yn,30,alg=new("hybrid",pop_size=20))
MU=sapply(sol@obs_stats$regs,function(x){x$mu})
Yc=X%*%MU
ymreg=Yc[cbind(1:length(sol@cl),sol@cl)]*sd(y)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=y-ymreg,color=cl),alpha=0.2)
Yc=Xn%*%MU
ymreg=Yc[cbind(1:length(sol@cl),sol@cl)]*sd(y)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=y-ymreg,color=cl),alpha=0.2)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=sol@cl),alpha=0.2)+
geom_abline(color='red')+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
Xp = data.frame(self=factor("noself",levels=c("noself","self")),din=10000,dout=10000,v=1,dist=seq(5000,500000,length.out = 2000))
Xpm = model.matrix(log(v)~ self+log(din)+log(dout)+log(dist),data=Xp)
sol@obs_stats$counts
MU
mean(X)
apply(X,2,mean)
apply(X[3:5],2,mean)
apply(X[,3:5],2,mean)
hist(yn)
sd(y)
log(150)
min(y)
Xregf[sol@cl==3,]
clust=unique(c(Xregf$iname[sol@cl==3],Xregf$jname[sol@cl==3]))
clust
plot(st_geoemtry(com_sa$INSEE_COM %in% clust))
plot(st_geometry(com_sa$INSEE_COM %in% clust))
plot(st_geometry(com_sa[com_sa$INSEE_COM %in% clust,]))
plot(st_geometry(com_sa[com_sa$INSEE_COM %in% clust,]),col="green")
plot(com_sa,col='red')
plot(st_geometry(com_sa),col='red')
plot(st_geometry(com_sa[com_sa$INSEE_COM %in% clust,]),col="green",add=TRUE)
dim(com_sa)
plot(st_geometry(com_sa[com_point$INSEE_COM %in% clust,]),col="green",add=TRUE)
plot(st_geometry(com_point),col='red')
plot(st_geometry(com_sa[com_point$INSEE_COM %in% clust,]),col="green",add=TRUE)
plot(st_geometry(com_point[com_point$INSEE_COM %in% clust,]),col="green",add=TRUE)
clust=unique(c(Xregf$iname[sol@cl==3],Xregf$jname[sol@cl==3]))
plot(st_geometry(com_point),col='black')
plot(st_geometry(com_point[com_point$INSEE_COM %in% clust,]),col="green",add=TRUE)
clust=unique(c(Xregf$iname[sol@cl==1],Xregf$jname[sol@cl==1]))
plot(st_geometry(com_point),col='black')
plot(st_geometry(com_point[com_point$INSEE_COM %in% clust,]),col="green",add=TRUE)
com_point[com_point$INSEE_COM %in% clust,]
MU
Xregf$v[sol@cl==1]
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=sol@cl),alpha=0.2)+
geom_abline(color='red')+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=cl),alpha=0.2)+
geom_abline(color='red')+
facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
Xregf$v[sol@cl==3]
MU
Xreg[sol@cl==3,]
Xregf[sol@cl==3,]
clust=unique(c(Xregf$iname[sol@cl==3],Xregf$jname[sol@cl==3]))
plot(st_geometry(com_point),col='black')
plot(st_geometry(com_point[com_point$INSEE_COM %in% clust,]),col="green",add=TRUE)
com_point[com_point$INSEE_COM %in% clust,]
com_point[com_point$INSEE_COM %in% clust,"NOM_COM"]
View(com_point[com_point$INSEE_COM %in% clust,"NOM_COM"])
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=cl),alpha=0.2)+
geom_abline(color='red')+
facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
Xregf[ymreg>9,]
Xregf[y>9,]
Xregf[y>9,"self"]
table(Xregf[y>9,"self"])
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=cl),alpha=0.2)+
geom_abline(color='red')+
facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=Xregf$self),alpha=0.2)+
geom_abline(color='red')+
facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
Xregfself= Xref %>% filter(self=="self")
fl = lm(log(v)~ log(din)+log(dout)+bs(log(dist),3)+self,data=Xregfself)
Xregfself= Xregf %>% filter(self=="self")
fl = lm(log(v)~ log(din)+log(dout)+bs(log(dist),3)+self,data=Xregfself)
fl = lm(log(v)~ log(din)+log(dout),data=Xregfself)
summary(fl)
y = log(Xregfself$v)
yn = y/sd(y)
ylm=predict(fl,Xregfself)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y),aes(x=y,y=ylm),alpha=0.2)+geom_abline(color='red')+coord_equal()
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregf$dist,din=Xregf$din),aes(y=y-ylm,x=d),alpha=0.2)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregfself$dist,din=Xregfself$din),aes(y=y-ylm,x=din),alpha=0.2)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregfself$dist,din=Xregfself$din),aes(y=y-ylm,x=log(din)),alpha=0.2)
fl = lm(log(v)~ log(din+dout),data=Xregfself)
summary(fl)
y = log(Xregfself$v)
yn = y/sd(y)
ylm=predict(fl,Xregfself)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y),aes(x=y,y=ylm),alpha=0.2)+geom_abline(color='red')+coord_equal()
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregfself$dist,din=Xregfself$din),aes(y=y-ylm,x=log(din)),alpha=0.2)
fl = lm(log(v)~ log(din)+log(dout),data=Xregfself)
summary(fl)
fl = lm(log(v)~ log(din+dout),data=Xregfself)
summary(fl)
fl = lm(log(v)~ log(din)+log(dout),data=Xregfself)
summary(fl)
fl = lm(log(v)~ log(din)+log(dout)+log(dist)+self,data=Xregf)
summary(fl)
fl = lm(log(v)~ self*(log(din)+log(dout)+log(dist)),data=Xregf)
summary(fl)
y = log(Xregf$v)
yn = y/sd(y)
ylm=predict(fl,Xregf)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y),aes(x=y,y=ylm),alpha=0.2)+geom_abline(color='red')+coord_equal()
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregf$dist,din=Xregf$din),aes(y=y-ylm,x=d),alpha=0.2)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregf$dist,din=Xregf$din),aes(y=y-ylm,x=d),alpha=0.2)+xlim(c(0,50000))
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregf$dist,din=Xregf$din),aes(y=y-ylm,x=log(d)),alpha=0.2)+xlim(c(0,50000))
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregf$dist,din=Xregf$din),aes(y=y-ylm,x=log(d)),alpha=0.2)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y,d=Xregf$dist,din=Xregf$din),aes(y=y-ylm,x=d),alpha=0.2)
ggplot()+geom_point(data=tibble(ylm=ylm,y=y),aes(x=y,y=ylm),alpha=0.2)+geom_abline(color='red')+coord_equal()
log(6)
exp(6)
table(Xregf$self)
X = model.matrix(log(v)~ self+log(din)+log(dout)+log(dist),data=Xregf %>% filter(self=="noself"))
X = model.matrix(log(v)~ log(din)+log(dout)+log(dist),data=Xregf %>% filter(self=="noself"))
y = log(Xns$v)
Xns= Xregf %>% filter(self=="noself")
X = model.matrix(log(v)~ log(din)+log(dout)+log(dist),data=Xns)
sol=greed_cond(X,y/sd(y),30,alg=new("hybrid",pop_size=20))
MU=sapply(sol@obs_stats$regs,function(x){x$mu})
Yc=X%*%MU
ymreg=Yc[cbind(1:length(sol@cl),sol@cl)]*sd(y)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=y-ymreg,color=cl),alpha=0.2)
y = log(Xns$v)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=y-ymreg,color=cl),alpha=0.2)
sol=greed_cond(X,y/sd(y),30,alg=new("hybrid",pop_size=20))
MU=sapply(sol@obs_stats$regs,function(x){x$mu})
Yc=X%*%MU
ymreg=Yc[cbind(1:length(sol@cl),sol@cl)]*sd(y)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=y-ymreg,color=cl),alpha=0.2)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=Xregf$self),alpha=0.2)+
geom_abline(color='red')+
facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=cl),alpha=0.2)+
geom_abline(color='red')+
facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=cl),alpha=0.2)+
geom_abline(color='red')+
#facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
MU
var(X)
Xn = cbind(X[,1],apply(X,2,scale))
var(Xn)
Xn = cbind(X[,1],apply(X[,1:ncol(X)],2,scale))
y = log(Xns$v)
var(Xn)
Xn = cbind(X[,1],apply(X[,2:ncol(X)],2,scale))
var(Xn)
sol=greed_cond(Xn,y/sd(y),30,alg=new("hybrid",pop_size=20))
MU=sapply(sol@obs_stats$regs,function(x){x$mu})
Yc=Xn%*%MU
ymreg=Yc[cbind(1:length(sol@cl),sol@cl)]*sd(y)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=y-ymreg,color=cl),alpha=0.2)
ggplot()+geom_point(data=tibble(ymreg=ymreg,y=y,cl=factor(sol@cl)),aes(x=y,y=ymreg,color=cl),alpha=0.2)+
geom_abline(color='red')+
#facet_wrap(~cl)+
coord_equal()+
ylim(c(log(50),12))+
xlim(c(log(100),12))
MU
Xp = data.frame(self=factor("noself",levels=c("noself","self")),din=10000,dout=10000,v=1,dist=seq(5000,500000,length.out = 2000))
Xpm = model.matrix(log(v)~ log(din)+log(dout)+log(dist),data=Xp)
sd(X[,2])
Xpm[,2]=Xpm[,2]/sd(X[,2])
Xpm[,3]=Xpm[,3]/sd(X[,3])
Xpm[,4]=Xpm[,4]/sd(X[,4])
ycl=Xpm%*%MU
dplot=data.frame(d=Xp$dist,y1=ycl[,1],y2=ycl[,2],y3=ycl[,3])
ggplot(dplot)+geom_line(aes(x=d/1000,y=y1),color='red')+geom_line(aes(x=d/1000,y=y2),color='blue')+geom_line(aes(x=d/1000,y=y3),color='green')
N=1500
K=15
pi=rep(1/K,K)
lambda  = 0.1
lambda_o = 0.01
Ks=5
mu = bdiag(lapply(1:(K/Ks), function(k){matrix(lambda_o,Ks,Ks)+diag(rep(lambda,Ks))}))+0.001
sbm = rsbm(N,pi,mu)
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"))
plot(sol)
sol = greed(sbm$x,25,model=new("sbm"),alg=new("seed"))
plot(sol)
sol = greed(sbm$x,25,model=new("sbm"),alg=new("seed"))
plot(sol)
library(rjsonio)
library(RJSONIO)
scrutins = fromJSON("./data-raw/Scrutins_XV.json")
scrutins[[1]]
scrutins$scrutin$scrutin[[1]]
scrutins$scrutin$scrutin[[1]]$ventilationVotes$organe$groupes
scrutins$scrutin$scrutin[[1]]$ventilationVotes$organe$groupes[[1]]
scrutins$scrutin$scrutin[[1]]$ventilationVotes$organe$groupes$groupe[[1]]
scrutins$scrutin$scrutin[[1]]$ventilationVotes$organe$groupes$groupe[[1]]$vote$decompteNominatif
scrutins$scrutin$scrutin[[1]]$ventilationVotes$organe$groupes$groupe[[1]]$vote$decompteNominatif$abstentions
scrutins$scrutin$scrutin[[1]]$ventilationVotes$organe$groupes$groupe[[1]]$vote$decompteNominatif$pours$votant
is = 1
groupes = scrutins$scrutin$scrutin[[is]]$ventilationVotes$organe$groupes$groupe
g=1
groupes[[g]]$vote$decompteNominatif$pours$votant
sapply(groupes[[g]]$vote$decompteNominatif$pours$votant,function(v){v[2]})
library(dplyr)
groupes[[g]]
groupes[[g]]$organeRef
groupes[[g]]$nombreMembresGroupe
groupes[[g]]$organeRef
tibble(scrutins = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$pours$votant,function(v){v[2]}), vote='pour')
scrutins$scrutin$scrutin[[is]]$uid
scrutins$scrutin$scrutin[[is]]$numero
tibble(scrutins = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$contres$votant,function(v){v[2]}), vote='contres')
groupes[[g]]$vote$decompteNominatif$contres$votant
groupes[[2]]$vote$decompteNominatif$contres
tibble(scrutin=NULL,groupe=NULL,mandat=NULL,vote=NULL)
tibble(scrutin=c(),groupe=c(),mandat=c(),vote=c())
votes = NULL
pours   =  tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$pours$votant,function(v){v[2]}), vote='pour')
contres = tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$contres$votant,function(v){v[2]}), vote='contres')
votes = votes %>% bind_rows(pours) %>% bind_rows(contres)
votes
votes = NULL
for (g in 1:length(groupes)){
pours   =  tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$pours$votant,function(v){v[2]}), vote='pour')
contres = tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$contres$votant,function(v){v[2]}), vote='contres')
votes = votes %>% bind_rows(pours) %>% bind_rows(contres)
}
votes
scrutins = fromJSON("./data-raw/Scrutins_XV.json")
scrutins = scrutins$scrutin$scrutin
votes = NULL
for (is in 1:length(scrutins)){
groupes = scrutins$scrutin$scrutin[[is]]$ventilationVotes$organe$groupes$groupe
for (g in 1:length(groupes)){
pours   =  tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$pours$votant,function(v){v[2]}), vote='pour')
contres = tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$contres$votant,function(v){v[2]}), vote='contres')
votes = votes %>% bind_rows(pours) %>% bind_rows(contres)
}
}
is
votes = NULL
for (is in 1:length(scrutins)){
groupes = scrutins[[is]]$ventilationVotes$organe$groupes$groupe
for (g in 1:length(groupes)){
pours   =  tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$pours$votant,function(v){v[2]}), vote='pour')
contres = tibble(scrutin = is, groupe= groupes[[g]]$organeRef, mandat=sapply(groupes[[g]]$vote$decompteNominatif$contres$votant,function(v){v[2]}), vote='contres')
votes = votes %>% bind_rows(pours) %>% bind_rows(contres)
}
}
votes
votes %>% group_by(scrutins) %>% summarise(nbv = n(),p=sum(if_else(vote=="pour",1,0)))
votes %>% group_by(scrutin) %>% summarise(nbv = n(),p=sum(if_else(vote=="pour",1,0)))
votes %>% group_by(scrutin) %>% summarise(nbv = n(),p=mean(if_else(vote=="pour",1,0)))
sumscr = votes %>% group_by(scrutin) %>% summarise(nbv = n(),p=mean(if_else(vote=="pour",1,0)))
hist(sumscr$p)
hist(sumscr$nbv)
?spread
library(tidyr)
?spread
votes
Xv=spread(votes[,-groupe],mandat,vote)
Xv=spread(votes[,-"groupe"],mandat,vote)
Xv=spread(votes[,-c("groupe")],mandat,vote)
Xv=spread(votes[,-2],mandat,vote)
votes[,-2]
Xv=spread(votes[,-2],scrutin,vote)
votes[306:308,]
votes %>% select(-groupe) %>% filter(!is.na(mandat))
vclean = votes %>% select(-groupe) %>% filter(!is.na(mandat))
Xv=spread(vclean,scrutin,vote)
Xv
image(is.na(Xv))
iss=sample(1840,100)
as.numeric(Xv[,iss+1]=="pour")
iss=sample(1839,100)
as.numeric(Xv[,iss+1]=="pour")
fill(as.numeric(Xv[,iss+1]=="pour"),0)
as.matrix(Xv[,iss+1]=="pour")
which(Xv[,iss+1]=="pour",arr.ind = TRUE)
is = which(Xv[,iss+1]=="pour",arr.ind = TRUE)
ij = which(Xv[,iss+1]=="pour",arr.ind = TRUE)
library(Matrix)
iss=sample(1839,200)
ij = which(Xv[,iss+1]=="pour",arr.ind = TRUE)
sparseMatrix(ij[,1],ij[2])
sparseMatrix(ij[,1],ij[,2])
sparseMatrix(ij[,1],ij[,2],x = rep(1,nrow(ij)))
nrow(Xv)
Xxv=sparseMatrix(ij[,1],ij[,2],x = rep(1,nrow(ij)))
spy = function(x){
ij=Matrix::which(x!=0,arr.ind = TRUE)
gg=data.frame(i=ij[,1],j=ij[,2],v=x[ij])
ggplot2::ggplot(gg)+ggplot2::geom_point(aes(y=-i,x=j,size=v))+
ggplot2::scale_x_continuous("",c())+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_size_area(max_size=1,guide='none')
}
spy(Xxv)
library(ggplot2)
spy(Xxv)
library(grred)
library(grred)
library(greed)
sol=greed(Xxv)
plot(sol)
sol@cl
clusters=data.frame(mandat = Xv[,1],cl=sol@cl)
clusters
votes %>% group_by(mandat,groupe) %>% summarise(nbv=n())
votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
mandat=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
clusters %>% left_join(mandats)
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
clusters %>% left_join(mandats)
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
iss=sample(1839,500)
ij = which(Xv[,iss+1]=="pour",arr.ind = TRUE)
Xxv=sparseMatrix(ij[,1],ij[,2],x = rep(1,nrow(ij)))
sol=greed(Xxv)
plot(sol)
clusters=data.frame(mandat = Xv[,1],cl=sol@cl)
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
sumscr = votes %>% group_by(scrutin) %>% summarise(nbv = n(),p=mean(if_else(vote=="pour",1,0)))
sumscr
dim(sumscr %>% filter(nbv>50))
dim(sumscr %>% filter(nbv>100))
dim(sumscr %>% filter(nbv>200))
sumscr %>% filter(nbv>100)
sumscr %>% filter(nbv>200)
iss = sumscr %>% filter(nbv>200)
ij = which(Xv[,iss$scrutin+1]=="pour",arr.ind = TRUE)
Xxv=sparseMatrix(ij[,1],ij[,2],x = rep(1,nrow(ij)))
sol=greed(Xxv)
plot(sol)
clusters=data.frame(mandat = Xv[,1],cl=sol@cl)
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
iss = sumscr %>% filter(nbv>100)
ij = which(Xv[,iss$scrutin+1]=="pour",arr.ind = TRUE)
Xxv=sparseMatrix(ij[,1],ij[,2],x = rep(1,nrow(ij)))
sol=greed(Xxv)
plot(sol)
clusters=data.frame(mandat = Xv[,1],cl=sol@cl)
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
sol=greed(Xxv)
plot(sol)
clusters=data.frame(mandat = Xv[,1],cl=sol@cl)
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
iss = sumscr %>% filter(nbv>50)
ij = which(Xv[,iss$scrutin+1]=="pour",arr.ind = TRUE)
Xxv=sparseMatrix(ij[,1],ij[,2],x = rep(1,nrow(ij)))
sol=greed(Xxv)
plot(sol)
clusters=data.frame(mandat = Xv[,1],cl=sol@cl)
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
dim(Xvv)
dim(Xxv)
iss = sumscr %>% filter(nbv>100)
ij = which(Xv[,iss$scrutin+1]=="pour",arr.ind = TRUE)
Xxv=sparseMatrix(ij[,1],ij[,2],x = rep(1,nrow(ij)))
dim(Xvv)
dim(Xxv)
sol=greed(Xxv)
plot(sol)
clusters=data.frame(mandat = Xv[,1],cl=sol@cl)
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
pprobs = post_probs(new("mm"),Xxv,sol@cl)
pprobs
apply(pprobs,1,max)
clusters=data.frame(mandat = Xv[,1],cl=sol@cl, p=apply(pprobs,1,max))
mandats=votes %>% filter(!is.na(mandat)) %>% group_by(mandat,groupe) %>% summarise(nbv=n())
groupes_clust = clusters %>% left_join(mandats)
hist(clusters$p)
groupes_clust = clusters %>% left_join(mandats) %>% filter(p>0.9)
table(groupes_clust$cl,groupes_clust$groupe)
groupes_clust = clusters %>% left_join(mandats) %>% filter(p>0.95)
table(groupes_clust$cl,groupes_clust$groupe)
groupes_clust = clusters %>% left_join(mandats)
table(groupes_clust$cl,groupes_clust$groupe)
install.packages("hexSticker")
imgurl <- "https://images.gr-assets.com/books/1348836358l/614039.jpg"
sticker(imgurl, package="greed", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png")
library(hexSticker)
imgurl <- "https://images.gr-assets.com/books/1348836358l/614039.jpg"
sticker(imgurl, package="greed", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png")
sticker(imgurl, package="greed", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="greed.png")
?sticker
sticker(imgurl, package="greed", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="greed.png",h_color="#fe0096",f_color="#ffffff")
sticker(imgurl, package="greed", p_size=8, s_x=1, s_y=.75, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff")
?sticker
sticker(imgurl, package="greed", p_size=8, s_x=1, s_y=.45, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff")
sticker(imgurl, package="greed", p_size=8, s_x=1, s_y=.95, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff")
sticker(imgurl, package="GREED", p_size=8, s_x=1, s_y=.95, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff")
?sticker
imgurl <- "https://www.comeetie.fr/greed.jpg"
sticker(imgurl, package="GREED", p_size=8, s_x=1, s_y=.95, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
?sticker
sticker(imgurl, package="GREED", p_size=12, s_x=1, s_y=.95, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
sticker(imgurl, package="GREED", p_size=15, s_x=1, s_y=.95, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.6,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.55,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.52,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "Purisa")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "Utopia")
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "utopia")
install.package("showtext")
install.packages("showtext")
install.packages("showtext")
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Gochi Hand", "gochi")
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Gochi Hand", "gochi")
## Automatically use showtext to render text for future devices
showtext_auto()
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "gochi")
library(hexSticker)
sticker(imgurl, package="GREED", p_size=20, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "gochi")
sticker(imgurl, package="GREED", p_size=24, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "gochi")
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Fredoka One", "fredoka")
## Automatically use showtext to render text for future devices
showtext_auto()
sticker(imgurl, package="GREED", p_size=24, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "gochi")
sticker(imgurl, package="GREED", p_size=24, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#fe0096",p_family = "fredoka")
sticker(imgurl, package="GREED", p_size=24, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#000000",p_family = "fredoka")
sticker(imgurl, package="GREED", p_size=22, s_x=1, s_y=.95, s_width=.6,p_y=1.5,
filename="greed.png",h_color="#fe0096",h_fill="#ffffff",p_color="#000000",p_family = "fredoka")
library(greed)
