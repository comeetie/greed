sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
sol@ggtree
library(greed)
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
library(greed)
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
sol@ggtree
sol
K=15
c(1,rep(2:14;each=2),rep(15,15))
c(1,rep(2:14,each=2),rep(15,15))
sol@ggtree$H=c(1,rep(2:14,each=2),rep(15,15))
sol@ggtree$H=c(1,rep(2:14,each=2))
sol@ggtree$H=c(1,rep(2:15,each=2))
sol@ggtree
library(greed)
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
sol@ggtree
warning()
warnings()
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
library(greed)
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
sol@ggtree
tree=sol@ggtree
library(greed)
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
plot(sol,type='tree')
sol@ggtree
library(greed)
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
plot(sol,type='tree')
sol@ggtree
library(greed)
plot(sol,type='tree')
sol = greed(sbm$x,model=new("sbm"),alg=new("seed"),verbose=TRUE)
sol@ggtree
plot(sol,type='tree')
sol
sapply(sol@path,function(v){v@icl1})
sapply(sol@path,function(v){v$icl1})
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
icl = icl[length(icl):1]
Kc  = 1:length(icl)
sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% filter(K!=sol@K)
library(dplyr)
sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% filter(K!=sol@K)
sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% filter(K!=sol@K) %>% arrange(x)
sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K)
gg=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K)
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
gg=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K)
gg
ggicl
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K)
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1))+geom_point(ggfront,aes(x=x,y=icl+x*(K-1)))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1))+geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))
ggfront
ggfront %>% mutate(xp=lag(x))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront
?geom_line
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xo*(K-1)))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))
plot(sol,type='tree')
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(expression(alpha))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$x,0)))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$x),0))
ggfront$xp[1]=1.01*min(ggfront$x)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$x),0))
ggfront
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))
ggfront$xp[1]=1.05*min(ggfront$x)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")
}
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")
}
plot_front(sol)
library(greed)
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")
}
plot_front(sol)
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x)) %>% filter(x!=xp)
ggfront$xp[1]=1.05*min(ggfront$x)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")
}
plot_front(sol)
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")+
ggplot2::ggtitle(paste0(toupper(x@model@name)," model with : ",max(x@cl)," clusters."))
}
plot_front(sol)
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(x@cl)," clusters."))
}
n
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(paste0("log(",expression(alpha),")"),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))
}
plot_front(sol)
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(expression(paste0("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
scale_y_continuous("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))
}
plot_front(sol)
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(expression(paste("-log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))
}
plot_front(sol)
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))
}
plot_front(sol)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(future)
library(ggplot2)
library(greed)
plan(multisession)
plan(multisession)
mat_reg_line = function(x,Xd,yd){
K = length(x@obs_stats$counts)
D = length(x@obs_stats$regs[[1]]$mu)
ggp= data.frame(x=Xd[,1],y=yd,K=factor(x@cl,levels=1:K))
gg=data.frame(y=as.vector(cbind(seq(min(ggp$x),max(ggp$x),length.out = 20),rep(1,20))%*%sapply(x@obs_stats$regs,function(reg){reg$mu})),
x=rep(seq(min(ggp$x),max(ggp$x),length.out = 20),K),K=rep(1:K,each=20))
ggplot2::ggplot()+
ggplot2::geom_point(data=ggp[,1:2],ggplot2::aes(x=x,y=y),alpha=0.05)+
ggplot2::geom_path(data=gg,ggplot2::aes(x=x,y=y,group=K))+
ggplot2::geom_point(data=ggp,ggplot2::aes(x=x,y=y,col=K))+
ggplot2::ggtitle(paste0("Mixture of Regression Model with : ",max(x@cl)," clusters."))+
ggplot2::facet_wrap(~K)+
ggplot2::theme_bw()
}
N=1500
K=6
pi=rep(1/K,K)
sig = 0.1
mu = matrix(rnorm(K*K),K,K)*0.3
diag(mu)=1
mre = rmreg(N,pi,mu,sig)
gg = data.frame(x=mre$X[,1],y=mre$y)
ggplot(gg)+geom_point(aes(x=x,y=y,col=factor(mre$cl)))
sol = greed_cond(mre$X,mre$y/sd(mre$y))
plot(sol,type='tree')
plot_front(sol)
plot(sol,type='tree')
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("seed"))
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("hybrid",pop_size=2))
library(greed)
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("hybrid",pop_size=2))
library(greed)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(future)
library(Matrix)
library(ggplot2)
library(ggplot2)
library(greed)
plan(multisession)
plan(multisession)
mat_reg_line = function(x,Xd,yd){
K = length(x@obs_stats$counts)
D = length(x@obs_stats$regs[[1]]$mu)
ggp= data.frame(x=Xd[,1],y=yd,K=factor(x@cl,levels=1:K))
gg=data.frame(y=as.vector(cbind(seq(min(ggp$x),max(ggp$x),length.out = 20),rep(1,20))%*%sapply(x@obs_stats$regs,function(reg){reg$mu})),
x=rep(seq(min(ggp$x),max(ggp$x),length.out = 20),K),K=rep(1:K,each=20))
ggplot2::ggplot()+
ggplot2::geom_point(data=ggp[,1:2],ggplot2::aes(x=x,y=y),alpha=0.05)+
ggplot2::geom_path(data=gg,ggplot2::aes(x=x,y=y,group=K))+
ggplot2::geom_point(data=ggp,ggplot2::aes(x=x,y=y,col=K))+
ggplot2::ggtitle(paste0("Mixture of Regression Model with : ",max(x@cl)," clusters."))+
ggplot2::facet_wrap(~K)+
ggplot2::theme_bw()
}
N=1500
pi=rep(1/K,K)
K=6
pi=rep(1/K,K)
sig = 0.1
mu = matrix(rnorm(K*K),K,K)*0.3
mre = rmreg(N,pi,mu,sig)
gg = data.frame(x=mre$X[,1],y=mre$y)
ggplot(gg)+geom_point(aes(x=x,y=y,col=factor(mre$cl)))
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("hybrid",pop_size=2))
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("hybrid",pop_size=2))
plot(sol,type='tree')
sol
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("seed"),verbose = TRUE)
library(greed)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(future)
library(Matrix)
library(ggplot2)
library(greed)
plan(multisession)
N=1500
K=6
pi=rep(1/K,K)
sig = 0.1
mu = matrix(rnorm(K*K),K,K)*0.3
diag(mu)=1
mre = rmreg(N,pi,mu,sig)
gg = data.frame(x=mre$X[,1],y=mre$y)
ggplot(gg)+geom_point(aes(x=x,y=y,col=factor(mre$cl)))
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("seed"),verbose = TRUE)
library(greed)
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("seed"),verbose = TRUE)
library(greed)
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("seed"),verbose = TRUE)
sol
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("seed"),verbose = TRUE)
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("seed"),verbose = TRUE)
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("hybrid",pop_size=5))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(future)
plan(multisession)
sol = greed_cond(mre$X,mre$y/sd(mre$y),alg=new("hybrid",pop_size=5))
plot(sol)
plot(sol,type='tree')
plot_front = function(sol){
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront$xp[1]=1.05*min(ggfront$x)
ggfront = ggfront %>% filter(x!=xp)
ggplot()+geom_abline(data=ggicl,aes(intercept=icl,slope=K-1),alpha=0.2)+
geom_point(data=ggfront,aes(x=x,y=icl+x*(K-1)))+
geom_segment(data=ggfront,aes(x=x,y=icl+x*(K-1),xend=xp,yend=icl+xp*(K-1)))+
scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))
}
plot_front(sol)
library(dplyr)
plot_front(sol)
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
ggfront=sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x)
ggfront
extract_front_height=function(sol){
icl=c(sol@icl,sapply(sol@path,function(v){v$icl1}))
icl = icl[length(icl):1]
K = 1:length(icl)
H=rep(0,length(icl))
cdi = Inf
bestline = 1
Front = c(1)
for (l in 2:length(icl)){
di = (icl[l]-icl[bestline])
din = di/(l-bestline)
if (di > 0){
while(din > cdi & length(Front)>1){
Front=Front[-length(Front)]
H[bestline]=-1
bestline = Front[length(Front)]
di = (icl[l]-icl[bestline])
din = di/(l-bestline)
cdi = H[bestline]
}
H[Front[length(Front)]]=din
cdi = di
bestline = l
Front=c(Front,l)
}else{
H[l]= -1
}
}
for(l in 2:length(icl)){
if(H[l]==-1){
H[l]=H[l-1]
}
}
H
}
extract_front_height(sol)
plot_front(sol)
extract_front_height=function(sol){
icl=c(sol@icl,sapply(sol@path,function(v){v$icl1}))
icl = icl[length(icl):1]
K = 1:length(icl)
H=rep(0,length(icl))
cdi = Inf
bestline = 1
Front = c(1)
for (l in 2:length(icl)){
di = (icl[l]-icl[bestline])
din = di/(l-bestline)
if (di > 0){
while(din > cdi & length(Front)>1){
Front=Front[-length(Front)]
H[bestline]=-1
bestline = Front[length(Front)]
di = (icl[l]-icl[bestline])
din = di/(l-bestline)
cdi = H[bestline]
}
H[Front[length(Front)]]=din
cdi = di
bestline = l
Front=c(Front,l)
}else{
H[l]= -1
}
print(H)
}
for(l in 2:length(icl)){
if(H[l]==-1){
H[l]=H[l-1]
}
}
H
}
extract_front_height(sol)
icl=c(sol@icl,sapply(sol@path,function(v){v$icl1}))
icl = icl[length(icl):1]
K = 1:length(icl)
plot(icl)
plot_front(sol)
extract_front_height(sol)
sol
extract_front_height=function(sol){
icl=c(sol@icl,sapply(sol@path,function(v){v$icl1}))
icl = icl[length(icl):1]
K = 1:length(icl)
H=rep(0,length(icl))
cdi = Inf
bestline = 1
Front = c(1)
for (l in 2:length(icl)){
di = (icl[l]-icl[bestline])
din = di/(l-bestline)
if (di > 0){
while(din > cdi & length(Front)>1){
Front=Front[-length(Front)]
H[bestline]=-1
bestline = Front[length(Front)]
di = (icl[l]-icl[bestline])
din = di/(l-bestline)
cdi = H[bestline]
}
H[Front[length(Front)]]=din
cdi = din
bestline = l
Front=c(Front,l)
}else{
H[l]= -1
}
print(H)
}
for(l in 2:length(icl)){
if(H[l]==-1){
H[l]=H[l-1]
}
}
H
}
extract_front_height(sol)
