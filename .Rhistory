ggplot2::scale_x_continuous("",c())
gglink = data.frame(from=ij[,1],to=ij[,2],p=ld[ij]) %>% mutate(nrow = ccrow[from],ncol=cccol[to],pn=p/(nrow*ncol)) %>% arrange(pn)
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~-1,x=-5,xend=to,size=~p,alpha=~p),curvature = 0)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~-1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~-1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.2)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.2)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~pn,alpha=~pn),curvature = 0.35)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~pn,alpha=~pn),curvature = 0.35)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~pn,alpha=~pn),curvature = 0.35)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$pn)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~pn),curvature = 0.35)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$pn)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$pn)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=ifelse(type=="row",-5,i),y=ifelse(type=="row",i,max(gglink$from)+1),size=n))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggnode = data.frame(type="col",n=cccol,i=1:sol@Kcol) %>% bind_rows(data.frame(type="row",n=ccrow,i=1:sol@Krow) )
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=ifelse(type=="row",-5,i),y=ifelse(type=="row",i,max(gglink$from)+1),size=n))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=~ifelse(type=="row",-5,i),y=~ifelse(type=="row",i,max(gglink$from)+1),size=~n))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=~ifelse(type=="row",-5,i),y=~ifelse(type=="row",i,max(gglink$from)+1),size=~n^2))+
ggplot2::theme_minimal()+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=~ifelse(type=="row",-5,i),y=~ifelse(type=="row",i,max(gglink$from)+1),size=~n^2))+
ggplot2::theme_minimal()+
ggplot2::scale_size_area("Clusters size:",limits=c(0,max(ggnode$n)^2),max_size = 5,guide="none")
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=~ifelse(type=="row",-5,i),y=~ifelse(type=="row",i,max(gglink$from)+1),size=~n^2))+
ggplot2::theme_minimal()+
ggplot2::scale_size_area("Clusters size:",limits=c(0,max(ggnode$n)^2),max_size = 5,guide="none")+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=~ifelse(type=="row",-5,i),y=~ifelse(type=="row",i,max(gglink$from)+1),size=~n^2))+
ggplot2::theme_minimal()+
ggplot2::scale_size_area("Clusters size:",limits=c(0,max(ggnode$n)^2),max_size = 7,guide="none")+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())
ggplot2::ggplot()+ggplot2::geom_curve(data=gglink,ggplot2::aes_(y=~from,yend=~max(from)+1,x=-5,xend=~to,size=~p,alpha=~p),curvature = 0.35)+
ggplot2::geom_point(data=ggnode,ggplot2::aes_(x=~ifelse(type=="row",-5,i),y=~ifelse(type=="row",i,max(gglink$from)+1),size=~n^2))+
ggplot2::theme_minimal()+
ggplot2::scale_size_area("Clusters size:",limits=c(0,max(ggnode$n)^2),max_size = 7,guide="none")+
ggplot2::scale_y_continuous("",c())+
ggplot2::scale_x_continuous("",c())+
ggplot2::scale_alpha("Link density:",limits=c(0,max(gglink$p)),guide="none")
plot(solc,type='front')
plot(solc,type='front')+scale_x_continuous(limits = c(solc@ggtree$H[2],0))
plot(solc,type='front')+scale_x_continuous(limits = c(-solc@ggtree$H[2],0))
plot(solc,type='front')+scale_x_continuous(limits = c(-solc@ggtree$H[3],0))
plot(solc,type='front')+scale_x_continuous(limits = c(-solc@ggtree$H[4],0))
cut(solc,20)
solcc=cut(solc,20)
solcc
greed:::postprocess(solcc)
solc=greed:::postprocess(solcc,data)
library(greed)
solc=greed:::postprocess(solcc,data)
library(greed)
solc=greed:::postprocess(solcc,data)
library(greed)
solc=greed:::postprocess(solcc,data)
solcc=cut(solc,25)
solc
solcc=cut(solc,19)
solcc
solc=greed:::postprocess(solcc)
library(greed)
solc=greed:::postprocess(solcc)
library(greed)
solc=greed:::postprocess(solcc)
library(greed)
solc=greed:::postprocess(solcc)
library(greed)
solc=greed:::postprocess(solcc)
plot(solc,type='tree')
data("Xvlegislature")
sol=greed(Xvlegislature$X,alg=new("hybrid",pop_size=50),verbose = TRUE,model=new("co_dcsbm"))
plan(multisession)
sol=greed(Xvlegislature$X,alg=new("hybrid",pop_size=50),verbose = TRUE,model=new("co_dcsbm"))
solc=greed:::postprocess(sol,greed:::preprocess(new("co_dcsbm"),Xvlegislature))
data=greed:::preprocess(new("co_dcsbm"),Xvlegislature)
data=greed:::preprocess(new("co_dcsbm"),Xvlegislature$X)
solc=greed:::postprocess(sol,greed:::preprocess(new("co_dcsbm"),Xvlegislature$X))
solc=greed:::postprocess(sol,data)
library(greed)
solc=greed:::postprocess(sol,data)
sol
plan(multisession)
sol=greed(Xvlegislature$X,alg=new("hybrid",pop_size=50),verbose = TRUE,model=new("co_dcsbm"))
sol
solc=greed:::postprocess(sol,greed:::preprocess(new("co_dcsbm"),Xvlegislature$X))
plot(solc)
sol=greed(Xvlegislature$X,alg=new("hybrid",pop_size=50),verbose = TRUE,model=new("co_dcsbm"))
sol
sol=greed(Xvlegislature$X,alg=new("hybrid",pop_size=50),verbose = FALSE,model=new("co_dcsbm"))
sol
plot(sol)
plot(sol,type='blocks')
solc=greed:::postprocess(sol,greed:::preprocess(new("co_dcsbm"),Xvlegislature$X))
plot(solc,type='blocks')
sol=greed(Xvlegislature$X,alg=new("hybrid",pop_size=50),verbose = FALSE,model=new("co_dcsbm"),K=30)
sol
plot(sol)
solc=greed:::postprocess(sol,greed:::preprocess(new("co_dcsbm"),Xvlegislature$X))
plot(sol,type='tree')
plan(multisession)
data("Xvlegislature")
X20news=Xvlegislature$X
ij=which(X20news>0,arr.ind = TRUE)
di=dim(X20news)
N=sum(di)
X =  sparseMatrix(i=c(ij[,1],ij[,2]+di[1]),j=c(ij[,2]+di[1],ij[,1]),x = c(X20news[ij],X20news[ij]))
sol=greed:::fit_greed(new("dcsbm"),list(X=X),sample(1:30,N,replace = TRUE),nb_max_pass=10,verbose = TRUE)
sol2=greed:::fit_greed(new("dcsbm"),list(X=X),sample(1:30,N,replace = TRUE),nb_max_pass=10,verbose = TRUE)
sol1=sol1
sol1=sol
# matrix of possible merge
ij=which(table(sol1@cl,sol2@cl)>0,arr.ind = TRUE)
ncl = as.numeric(factor(paste(sol1@cl,"_",sol2@cl,sep=""),levels=paste(ij[,1],"_",ij[,2],sep="")))
M=matrix(0,nrow(ij),nrow(ij))
for(k in 1:sol1@K){
M[ij[,1]==k,ij[,1]==k]=1
}
for(k in 1:sol2@K){
M[ij[,2]==k,ij[,2]==k]=1
}
ijAm=which(tril(M,-1)>0,arr.ind = TRUE)
Am=Matrix::sparseMatrix(ijAm[,1],ijAm[,2],x=rep(1,nrow(ijAm)),dims = c(max(ncl),max(ncl)))
sol3=greed:::merge_cstr(new("dcsbm"),list(X=X),ncl,Am,TRUE)
library(greed)
sol=greed:::fit_greed(new("dcsbm"),list(X=X),c(sample(1:15,nrow(X),replace = TRUE),sample(16:30,ncol(X),replace = TRUE)),nb_max_pass=10,verbose = TRUE)
sol=greed:::fit_greed(new("dcsbm"),list(X=X),c(sample(1:15,nrow(X),replace = TRUE),sample(16:30,ncol(X),replace = TRUE)),nb_max_pass=10,verbose = TRUE)
sol=greed:::fit_greed(new("dcsbm"),list(X=X),c(sample(1:15,nrow(X),replace = TRUE),sample(16:30,ncol(X),replace = TRUE)),nb_max_pass=10,verbose = TRUE)
sol=greed:::fit_greed(new("dcsbm"),list(X=X),c(sample(1:15,nrow(X),replace = TRUE),sample(16:30,ncol(X),replace = TRUE)),nb_max_pass=10,verbose = TRUE)
sol=greed:::fit_greed(new("dcsbm"),list(X=X),c(sample(1:15,nrow(X),replace = TRUE),sample(16:30,ncol(X),replace = TRUE)),nb_max_pass=10,verbose = TRUE)
library(greed)
sol=greed(X)
library(greed)
plan(multisession)
sol=greed(X)
plot(sol)
library(greed)
sample_cl(new("dcsbm"),list(N=1000),5)
greed:::sample_cl(new("dcsbm"),list(N=1000),5)
library(greed)
library(Matrix)
data("Xvlegislature")
X20news=Xvlegislature$X
ij=which(X20news>0,arr.ind = TRUE)
di=dim(X20news)
N=sum(di)
X =  sparseMatrix(i=c(ij[,1],ij[,2]+di[1]),j=c(ij[,2]+di[1],ij[,1]),x = c(X20news[ij],X20news[ij]))
sol2=greed:::fit_greed(new("dcsbm"),list(X=X),sample(1:30,N,replace = TRUE),nb_max_pass=10,verbose = TRUE)
sol1=greed:::fit_greed(new("dcsbm"),list(X=X),sample(1:30,N,replace = TRUE),nb_max_pass=1,verbose = TRUE)
# matrix of possible merge
ij=which(table(sol1@cl,sol2@cl)>0,arr.ind = TRUE)
ncl = as.numeric(factor(paste(sol1@cl,"_",sol2@cl,sep=""),levels=paste(ij[,1],"_",ij[,2],sep="")))
M=matrix(0,nrow(ij),nrow(ij))
for(k in 1:sol1@K){
M[ij[,1]==k,ij[,1]==k]=1
}
for(k in 1:sol2@K){
M[ij[,2]==k,ij[,2]==k]=1
}
ijAm=which(tril(M,-1)>0,arr.ind = TRUE)
Am=Matrix::sparseMatrix(ijAm[,1],ijAm[,2],x=rep(1,nrow(ijAm)),dims = c(max(ncl),max(ncl)))
solm=greed:::merge_cstr(new("co_dcsbm"),list(X=X,N=nrow(X),ncl,Am,TRUE)
)
solm=greed:::merge_cstr(new("co_dcsbm"),list(X=X,N=nrow(X)),ncl,Am,TRUE)
solm=greed:::merge_cstr(new("co_dcsbm"),list(X=X,N=nrow(X)),ncl,Am,TRUE)
solm=greed:::merge_cstr(new("co_dcsbm"),list(X=X,N=nrow(X)),ncl,Am,TRUE)
solm=greed:::merge_cstr(new("co_dcsbm"),list(X=X,N=nrow(X)),ncl,Am,TRUE)
solm=greed:::merge_cstr(new("co_dcsbm"),list(X=X,N=nrow(X)),ncl,Am,TRUE)
plan(multisession);sol=greed(X)
library(future)
plan(multisession);
sol=greed(X)
sol=greed(X)
library(greed)
sol=greed(X)
data=greed:::preprocess(new("co_dcsbm"),X)
data=greed:::preprocess(new("dcsbm"),X)
greed:::sample_cl(new("dcsbm"),data,5)
data
library(greed)
greed:::sample_cl(new("dcsbm"),data,5)
greed:::sample_cl(new("dcsbm"),data,c(5))
sol=greed(Xvlegislature$X)
plan(multisession)
sol=greed(Xvlegislature$X)
dim(X)
sol=greed(X)
greed:::sample_cl(new("dcsbm"),data,5)
data=greed:::preprocess(new("dcsbm"),X)
data$N
dim(X)
greed:::sample_cl(new("dcsbm"),data,5)
greed:::sample_cl(new("sbm"),data,5)
greed:::sample_cl(new("mm"),data,5)
greed:::sample_cl(new("mreg"),data,5)
data$N
setMethod(f = "sample_cl",
signature = signature("icl_model","list","numeric"),
definition = function(model,data,K){
print(data$N)
sample(1:K,data$N,replace = TRUE)
})
setGeneric("sample_cl", function(model, data,K) standardGeneric("sample_cl"))
setMethod(f = "sample_cl",
signature = signature("icl_model","list","numeric"),
definition = function(model,data,K){
print(data$N)
sample(1:K,data$N,replace = TRUE)
})
greed:::sample_cl(new("mreg"),data,5)
sample_cl(new("mreg"),data,5)
devtools::document()
devtools::document()
library(greed)
sample_cl(new("mreg"),data,5)
library(greed)
data("Xvlegislature")
X20news=Xvlegislature$X
ij=which(X20news>0,arr.ind = TRUE)
library(Matrix)
di=dim(X20news)
N=sum(di)
X =  sparseMatrix(i=c(ij[,1],ij[,2]+di[1]),j=c(ij[,2]+di[1],ij[,1]),x = c(X20news[ij],X20news[ij]))
data=greed:::preprocess(new("dcsbm"),X)
greed:::sample_cl(new("dcsbm"),data,5)
library(greed)
greed:::sample_cl(new("dcsbm"),data,5)
library(greed)
library(future)
plan(multicession)
plan(multisession)
sol=greed(Xvlegislature$X,K=30,alg=new("hybrid",pop_size=60))
library(greed)
library(greed)
sol=greed(Xvlegislature$X,K=30,alg=new("hybrid",pop_size=60))
plan(multicore)
system.time({
sol=greed(Xvlegislature$X,K=30,alg=new("hybrid",pop_size=60))
})
plan(multisession)
system.time({
sol=greed(Xvlegislature$X,K=30,alg=new("hybrid",pop_size=60))
})
plan("multicore")
system.time({
sol=greed(Xvlegislature$X,K=30,alg=new("hybrid",pop_size=60))
})
plan(multiprocess)
system.time({
sol=greed(Xvlegislature$X,K=30,alg=new("hybrid",pop_size=60))
})
supportsMulticore()
library(greed)
library(greed)
supportsMulticore()
data(Football)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
library(greed)
gc()
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
library(greed)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
greed(Football$X)
library(greed)
greed(Football$X)
greed(Football$X)
library(greed)
sol=greed(Football$X)
library(greed)
library(greed)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol
library(greed)
library(greed)
sol=greed(Football$X)
library(greed)
sol=greed(Football$X)
library(greed)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X)
sol=greed(Football$X,verbose = TRUE)
library(greed)
library(greed)
sol=greed(Football$X,verbose = TRUE)
library(greed)
sol=greed(Football$X,verbose = TRUE)
library(greed)
sol=greed(Football$X,verbose = TRUE)
sol=greed(Football$X)
plot(sol,type='tree')
sol=greed(Football$X)
data(Xvlegislature)
sol=greed(Xvlegislature$X[,1:150])
plot(sol)
library(greed)
sol=greed(Xvlegislature$X[,1:150])
plot(sol)
library(future)
plan(multiprocess)
sol=greed(Xvlegislature$X[,1:150])
plan(sequential);sol=greed(Football$X)
library(greed)
load("~/Projets/greed/data-raw/X20news.rda")
sum(rowSums(X20news)==0)
sum(colSums(X20news)==0)
sort(colSums(X20news))
sort(rowSums(X20news))
library(greed)
library(greed)
library(future)
plan(multisession)
library(Matrix)
load("~/Projets/greed/data-raw/X20news.rda")
sol=greed(X20news,alg=new("hybrid",Kmax=500,nb_max_gen=6))
library(greed)
library(greed)
library(future)
plan(multisession)
library(Matrix)
load("~/Projets/greed/data-raw/X20news.rda")
sol=greed(X20news,alg=new("hybrid",Kmax=500,nb_max_gen=6))
library(greed)
library(greed)
library(future)
plan(multisession)
library(Matrix)
load("~/Projets/greed/data-raw/X20news.rda")
sol=greed(X20news,alg=new("hybrid",Kmax=500,nb_max_gen=6))
library(greed)
library(greed)
library(future)
plan(multisession)
library(Matrix)
load("~/Projets/greed/data-raw/X20news.rda")
sol=greed(X20news,alg=new("hybrid",Kmax=500,nb_max_gen=6))
library(greed)
library(greed)
library(future)
plan(multisession)
library(Matrix)
load("~/Projets/greed/data-raw/X20news.rda")
sol=greed(X20news,alg=new("hybrid",Kmax=500,nb_max_gen=6))
table(sol@cl,rep(1,c(rep(1,nrow(X20news)),rep(2,ncol(X20news))))
)
table(sol@cl,c(rep(1,nrow(X20news)),rep(2,ncol(X20news))))
plot(ols,type='tree')
plot(sol,type='tree')
rowSums(X20news[sol@cl==32,])
rowSums(X20news[sol@cl[1:nrow(X20news)]==32,])
rowSums(X20news[sol@cl[1:nrow(X20news)]==31,])
plot(sol,type='blocks')
x=sol
K = x@Krow
D = x@Kcol
ccrow = cumsum(table(x@clrow))
cccol = cumsum(table(x@clcol))
gg=data.frame(kc=rep(ccrow,D),
lc=rep(cccol,each=K),
sizek = rep(table(x@clrow),D),
sizel = rep(table(x@clcol),each=K),
count=as.vector(x@obs_stats$co_x_counts))
gg
gg %>% mutate(s=count/(sizek*sizel))
library(dplyr)
gg %>% mutate(s=count/(sizek*sizel))
ylab  = round(100*table(x@clcol)/sum(table(x@clcol)))
xlab = round(100*table(x@clrow)/sum(table(x@clrow)))
ggplot2::ggplot(gg)+ggplot2::geom_tile(ggplot2::aes_(y=~kc-sizek/2,x=~lc-sizel/2,height=~sizek,width=~sizel,fill=~count/(sizek*sizel),alpha=~count/(sizek*sizel)))+
ggplot2::scale_fill_distiller("E[X]",type="seq",direction = 1)+
ggplot2::scale_alpha("E[X]")+
ggplot2::ggtitle(paste0("Co clustering with : ",max(x@cl)," clusters."))+
ggplot2::scale_x_continuous("Col clusters",breaks=cccol,labels=ifelse(ylab>5,paste0(ylab,"%"),""),minor_breaks = NULL)+
ggplot2::scale_y_continuous("Row clusters",breaks=ccrow,labels =ifelse(xlab>5,paste0(xlab,"%"),""),minor_breaks = NULL)+
ggplot2::theme_bw()
ggplot2::ggplot(gg)+ggplot2::geom_tile(ggplot2::aes_(y=~kc-sizek/2,x=~lc-sizel/2,height=~sizek,width=~sizel,fill=~count/(sizek*sizel),alpha=~count/(sizek*sizel)))+
ggplot2::scale_fill_distiller("E[X]",type="seq",direction = 1)+
ggplot2::scale_alpha("E[X]")+
ggplot2::ggtitle(paste0("Co clustering with : ",max(x@cl)," clusters."))+
ggplot2::scale_x_continuous("Col clusters",breaks=cccol,labels=ifelse(ylab>5,paste0(ylab,"%"),""),minor_breaks = NULL)+
ggplot2::scale_y_continuous("Row clusters",breaks=ccrow,labels =ifelse(xlab>5,paste0(xlab,"%"),""),minor_breaks = NULL)+
ggplot2::theme_bw()
ggplot2::ggplot(gg)+ggplot2::geom_tile(ggplot2::aes_(y=~kc-sizek/2,x=~lc-sizel/2,height=~sizek,width=~sizel,fill=~count/(sizek*sizel)))+
ggplot2::scale_fill_distiller("E[X]",type="seq",direction = 1)+
ggplot2::ggtitle(paste0("Co clustering with : ",max(x@cl)," clusters."))+
ggplot2::scale_x_continuous("Col clusters",breaks=cccol,labels=ifelse(ylab>5,paste0(ylab,"%"),""),minor_breaks = NULL)+
ggplot2::scale_y_continuous("Row clusters",breaks=ccrow,labels =ifelse(xlab>5,paste0(xlab,"%"),""),minor_breaks = NULL)+
ggplot2::theme_bw()
ggplot2::ggplot(gg)+ggplot2::geom_tile(ggplot2::aes_(y=~kc-sizek/2,x=~lc-sizel/2,height=~sizek,width=~sizel,fill=~log(count/(sizek*sizel))))+
ggplot2::scale_fill_distiller("E[X]",type="seq",direction = 1)+
ggplot2::ggtitle(paste0("Co clustering with : ",max(x@cl)," clusters."))+
ggplot2::scale_x_continuous("Col clusters",breaks=cccol,labels=ifelse(ylab>5,paste0(ylab,"%"),""),minor_breaks = NULL)+
ggplot2::scale_y_continuous("Row clusters",breaks=ccrow,labels =ifelse(xlab>5,paste0(xlab,"%"),""),minor_breaks = NULL)+
ggplot2::theme_bw()
x@obs_stats$din
ggplot2::ggplot(gg)+ggplot2::geom_tile(ggplot2::aes_(y=~kc-sizek/2,x=~lc-sizel/2,height=~sizek,width=~sizel,fill=~log(count)))+
ggplot2::scale_fill_distiller("E[X]",type="seq",direction = 1)+
ggplot2::ggtitle(paste0("Co clustering with : ",max(x@cl)," clusters."))+
ggplot2::scale_x_continuous("Col clusters",breaks=cccol,labels=ifelse(ylab>5,paste0(ylab,"%"),""),minor_breaks = NULL)+
ggplot2::scale_y_continuous("Row clusters",breaks=ccrow,labels =ifelse(xlab>5,paste0(xlab,"%"),""),minor_breaks = NULL)+
ggplot2::theme_bw()
ggplot2::ggplot(gg)+ggplot2::geom_tile(ggplot2::aes_(y=~kc-sizek/2,x=~lc-sizel/2,height=~sizek,width=~sizel,fill=~(count))+
ggplot2::scale_fill_distiller("E[X]",type="seq",direction = 1)+
ggplot2::ggtitle(paste0("Co clustering with : ",max(x@cl)," clusters."))+
ggplot2::scale_x_continuous("Col clusters",breaks=cccol,labels=ifelse(ylab>5,paste0(ylab,"%"),""),minor_breaks = NULL)+
ggplot2::scale_y_continuous("Row clusters",breaks=ccrow,labels =ifelse(xlab>5,paste0(xlab,"%"),""),minor_breaks = NULL)+
ggplot2::theme_bw()
)
ggplot2::ggplot(gg)+ggplot2::geom_tile(ggplot2::aes_(y=~kc-sizek/2,x=~lc-sizel/2,height=~sizek,width=~sizel,fill=~(count)))+
ggplot2::scale_fill_distiller("E[X]",type="seq",direction = 1)+
ggplot2::ggtitle(paste0("Co clustering with : ",max(x@cl)," clusters."))+
ggplot2::scale_x_continuous("Col clusters",breaks=cccol,labels=ifelse(ylab>5,paste0(ylab,"%"),""),minor_breaks = NULL)+
ggplot2::scale_y_continuous("Row clusters",breaks=ccrow,labels =ifelse(xlab>5,paste0(xlab,"%"),""),minor_breaks = NULL)+
ggplot2::theme_bw()
gg %>% mutate(s=count/(sizek*sizel)) %>% arrange(s)
gg %>% mutate(s=count/(sizek*sizel)) %>% arrange(desc(s))
sol@icl
