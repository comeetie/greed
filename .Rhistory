library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed(mm$x)
library(greed)
sol=greed(mm$x)
sol=greed(mm$x)
sol=greed(mm$x)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol@cl
dim(mm$x)
table(sol@cl,c(rep(1,500),rep(2,30))
)
mm$cl
table(sol@cl,c(mm$cl,rep(2,30))
)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol@cl[1:500]
table(sol@cl[1:500],mm$cl)
library(greed)
sol=greed:::swap_cstr(model,data,c(mm$cl,11:40),data$moves)
sol=greed:::swap_cstr(model,data,,data$moves)
length(c(mm$cl,11:40))
sol=greed:::swap_cstr(model,data,c(mm$cl,11:40),greed:::preprocess(model,mm$x,40)$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sum(mm$x)
sum(mm$x)/(500*30)
range(mm$x)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol@obs_stats
mm$cl
rep(1:10,each=30)
rep(1:10,30)
rep(1:10,3)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(1:10,3)),data$moves)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
table(sol@cl[1:500],mm$cl)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
table(sol@cl[1:500],mm$cl)
library(greed)
sol=greed:::swap_cstr(model,data,c(mm$cl,rep(11:20,3)),data$moves)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
table(sol@cl[1:500],mm$cl)
library(greed)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed(mm$x)
sol=greed:::merge_cstr(model,data,cl,data$moves)
sol=greed:::swap_cstr(model,data,cl,data$moves)
sol=greed:::merge_cstr(model,data,sol@cl,data$moves)
sol=greed:::merge_cstr(model,data,sol@cl,greed:::as.sparse(matrix(1,max(sol@cl),max(sol@cl))))
sol
sol=greed(mm$x)
library(greed)
sol=greed(mm$x)
library(greed)
sol=greed(mm$x)
library(greed)
sample_cl(model,data,K)
sol=greed(mm$x)
library(greed)
sol=greed(mm$x)
cl=c(rep(1:20,each=5),22)
cl
table(cl)
as.numeric(factor(cl))
library(greed)
sol=greed(mm$x)
model=new("co_dcsbm")
data=greed:::preprocess(model,mm$x,20)
data
cl=greed:::sample_cl(model,data,20)
cl
library(greed)
cl=greed:::sample_cl(model,data,20)
sol=greed(mm$x)
library(greed)
sol=greed(mm$x)
library(greed)
sol=greed(mm$x)
cli=greed:::sample_cl(model,data,20)
cli=as.numeric(factor(cli))
Ko=max(cli)
moves = as.sparse(matrix(1,Ko,Ko))
moves = greed:::as.sparse(matrix(1,Ko,Ko))
print(Ko)
sol=greed:::swap_cstr(model,data,cli,moves)
sol
sol@icl
table(sol@cl[1:500],mm$cl)
table(sol@cl,c(mm$cl,rep(11,30)))
library(greed)
library(greed)
table(sol@cl,c(mm$cl,rep(11,30)))
sol=greed:::swap_cstr(model,data,cli,moves)
library(greed)
sol=greed:::swap_cstr(model,data,cli,moves)
library(greed)
sol=greed:::swap_cstr(model,data,cli,moves)
library(greed)
sol=greed:::swap_cstr(model,data,cli,moves)
sol=greed:::swap_cstr(model,data,cli,moves)
sol=greed:::swap_cstr(model,data,cli,moves)
sol=greed:::swap_cstr(model,data,cli,moves)
sol=greed:::swap_cstr(model,data,cli,moves)
sol=greed:::swap_cstr(model,data,cli,moves)
sol=greed:::swap_cstr(model,data,cli,moves)
sol=greed:::swap_cstr(model,data,cli,moves)
table(sol@cl,c(mm$cl,rep(11,30)))
library(greed)
table(sol@cl,c(mm$cl,rep(11,30)))
sol=greed:::swap_cstr(model,data,cli,moves)
table(sol@cl,c(mm$cl,rep(11,30)))
sol@icl
sol=greed(mm$x)
table(sol@cl,c(mm$cl,rep(11,30)))
sol=greed(mm$x)
table(sol@cl,c(mm$cl,rep(11,30)))
sol=greed:::swap_cstr(model,data,cli,moves)
table(sol@cl,c(mm$cl,rep(11,30)))
solsw=greed:::swap_cstr(model,data,cli,moves)
solm=greed:::merge_cstr(model,data,solsw@cl,greed:::as.sparse(matrix(1,solsw@K)))
solm=greed:::merge_cstr(model,data,solsw@cl,greed:::as.sparse(matrix(1,solsw@K,solsw@K)))
table(solm@cl,c(mm$cl,rep(11,30)))
table(solsw@cl,c(mm$cl,rep(11,30)))
sol=greed(mm$x)
sol@cl
table(sol@cl,c(mm$cl,rep(11,30)))
sol@K
sol=greed(mm$x,alg=new("hybrid",pop_size=40))
image(mm$x)
sol@obs_stats
mm$x
mm$x[order(mm$cl),]
image(as.matrix(mm$x[order(mm$cl),])
)
sum(sol@obs_stats$x_counts)
sum(mm$x)
table(sol@clcol)
table(sol@cl)
library(greed)
sol=greed(mm$x,alg=new("hybrid",pop_size=40))
library(greed)
sol=greed(mm$x,alg=new("hybrid",pop_size=40))
library(greed)
sol=greed(mm$x,alg=new("hybrid",pop_size=40))
sol@obs_stats$x_counts
greed:::gsum_bimat(sol@cl[1:500]-1,sol@cl[501:530]-1,mm$x,17)
library(greed)
greed:::gsum_bimat(sol@cl[1:500]-1,sol@cl[501:530]-1,mm$x,17)
sol=greed(mm$x)
sol=greed(mm$x)
library(greed)
sol=greed(mm$x)
N = 500
K = 10
pi = rep(1/K,K)
mu = cbind(diag(rep(20,K)),matrix(0.5,K,20))
mm = rmm(N,pi,mu,70)
sol=greed(mm$x,model=new('co_dcsbm'))
sol@cl
sol@obs_stats$x_counts
N = 500
K = 10
pi = rep(1/K,K)
mu = cbind(diag(rep(20,K)),matrix(4,K,20))
mm = rmm(N,pi,mu,70)
sol=greed(mm$x,model=new('co_dcsbm'))
library(greed)
sol=greed(mm$x,model=new('co_dcsbm'))
sol=greed(mm$x,model=new('co_dcsbm'),alg=new("hybrid",nb_gen=1))
sol=greed(mm$x,model=new('co_dcsbm'),alg=new("hybrid",nb_generation=1))
new("hybrid")
sol=greed(mm$x,model=new('co_dcsbm'),alg=new("hybrid",nb_max_gen=1))
sol=greed(mm$x,model=new('co_dcsbm'),alg=new("hybrid",nb_max_gen=2))
solg1=greed(mm$x,model=new('co_dcsbm'),alg=new("hybrid",nb_max_gen=1))
solg1@obs_stats$x_counts
N = 500
K = 10
pi = rep(1/K,K)
mu = cbind(diag(rep(20,K)+4),matrix(4,K,20))
mm = rmm(N,pi,mu,70)
sol=greed(mm$x,model=new('co_dcsbm'))
sol@obs_stats$x_counts
sol@obs_stats$x_counts[6:15,c(1:5,16)]
mu
sol@obs_stats$counts
mu = cbind(diag(rep(20,K)),matrix(4,K,20))+2
mm = rmm(N,pi,mu,70)
sol=greed(mm$x,model=new('co_dcsbm'))
sol=greed(mm$x,model=new('co_dcsbm'))
sol@obs_stats$counts
sol@obs_stats
mu = cbind(diag(rep(20,K)),matrix(4,K,20))+1
mm = rmm(N,pi,mu,50)
sol=greed(mm$x,model=new('co_dcsbm'))
sol@obs_stats
sol=greed(mm$x,model=new('co_dcsbm'))
sol@obs_stats
sol@obs_stats$dr
sol@obs_stats$dc
library(greed)
library(greed)
sol=greed(mm$x,model=new('co_dcsbm'))
library(greed)
library(greed)
sol=greed(mm$x,model=new('co_dcsbm'))
library(greed)
sol=greed(mm$x,model=new('co_dcsbm'))
sol=greed(mm$x,model=new('co_dcsbm'))
library(greed)
sol=greed(mm$x,model=new('co_dcsbm'))
data=greed:::preprocess(model,mm,20)
data=greed:::preprocess(model,mm$x,20)
soli=greed:::fit_greed(model,data,c(mm$cl,11:20,rep(21,20)),type='none')
soli
soli@icl
sol=greed(mm$x,model=new('co_dcsbm'))
sol=greed(mm$x,model=new('co_dcsbm'),verbose = TRUE)
N = 500
K = 10
pi = rep(1/K,K)
mu = diag(rep(1/5,K))+runif(K*K)*0.01
sbm = rdcsbm(N,pi,mu,rep(15,N),rep(15,N))
sol=greed(sbm$x)
library(greed)
N = 500
K = 10
pi = rep(1/K,K)
mu = diag(rep(1/5,K))+runif(K*K)*0.01
sbm = rdcsbm(N,pi,mu,rep(15,N),rep(15,N))
sol=greed(sbm$x)
library(greed)
N = 500
K = 10
pi = rep(1/K,K)
mu = diag(rep(1/5,K))+runif(K*K)*0.01
sbm = rdcsbm(N,pi,mu,rep(15,N),rep(15,N))
sol=greed(sbm$x)
library(greed)
N = 500
K = 10
pi = rep(1/K,K)
mu = diag(rep(1/5,K))+runif(K*K)*0.01
sbm = rdcsbm(N,pi,mu,rep(15,N),rep(15,N))
sol=greed(sbm$x)
library(greed)
N = 500
K = 10
pi = rep(1/K,K)
mu = diag(rep(1/5,K))+runif(K*K)*0.01
sbm = rdcsbm(N,pi,mu,rep(15,N),rep(15,N))
sol=greed(sbm$x)
model=new("dcsbm")
data=preprocess(model,sbm$x;20)
data=preprocess(model,sbm$x,20)
data=greed:::preprocess(model,sbm$x,20)
cl=greed:::sample_cl(model,data,20)
sol=greed:::fit_greed(model,data,cl,type='merge')
library(greed)
sol=greed:::fit_greed(model,data,cl,type='merge')
library(greed)
sol=greed:::fit_greed(model,data,cl,type='merge')
library(greed)
sol=greed:::fit_greed(model,data,cl,type='merge')
sol=greed:::merge_cstr(model,data,cl,greed:::as.sparse(matrix(1,max(cl),max(cl))))
library(greed)
sol=greed:::merge_cstr(model,data,cl,greed:::as.sparse(matrix(1,max(cl),max(cl))))
library(greed)
sol=greed:::merge_cstr(model,data,cl,greed:::as.sparse(matrix(1,max(cl),max(cl))))
sol=greed(sbm$x)
library(greed)
data("FrenchParliament")
sol=greed(FrenchParliament$X)
library(future)
plan(multisession)
dim(FrenchParliament$X)
sol=greed(FrenchParliament$X)
sol@obs_stats$x_counts
library(greed)
sol=greed(sbm$x)
plot(sol)
sol@obs_stats$x_counts
mu = diag(rep(1/5,K))+runif(K*K)*0.01
mu
image(mu)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
N=800
K=8
pi=rep(1/K,K)
lambda  = 0.1
lambda_o = 0.01
Ks=4
mu = bdiag(lapply(1:(K/Ks), function(k){matrix(lambda_o,Ks,Ks)+diag(rep(lambda,Ks))}))+0.001
library(future)
library(Matrix)
library(ggplot2)
library(greed)
plan(multisession)
N=800
K=8
pi=rep(1/K,K)
lambda  = 0.1
lambda_o = 0.01
Ks=4
mu = bdiag(lapply(1:(K/Ks), function(k){matrix(lambda_o,Ks,Ks)+diag(rep(lambda,Ks))}))+0.001
sbm = rsbm(N,pi,mu)
sol = greed(sbm$x,model=new("sbm"))
plot(sol,type='blocks')
plot(sol,type='nodelink')
plot(sol,type='tree')
qr(mu)$rank
library(greed)
library(greed)
library(Matrix)
data("Jazz_full")
model=new("co_dcsbm")
Xc=Jazz_full$X[rowSums(Jazz_full$X)>2,]
Xc=Xc[,colSums(Xc)>2]
dim(Xc)
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
library(greed)
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
library(greed)
sol=greed(Xc,K=40,alg=new("hybrid"))
sol
plot(sol)
sol=greed(Xc,K=40,alg=new("seed"))
sol
library(greed)
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
library(greed)
library(greed)
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
plot(sol)
sol=greed(Xc,K=40,alg=new("hybrid"))
sol
plot(sol)
library(greed)
sol=greed(Xc,K=40,alg=new("hybrid"))
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
sol
plot(sol)
library(greed)
library(future)
plan(multisession)
data("Xvlegislature")
Xc=Xvlegislature$X
sol=greed(Xc,K=40,alg=new("hybrid"))
sol
plot(sol)
mu=cbind(lower.tri(matrix(1,4,4)),upper.tri(matrix(1,4,4)))*0.2+0.01
mu[2,4]=0.21
mu[3,5]=0.21
mm=rlbm(200,400,rep(1/4,4),rep(1/8,8),mu)
sol=greed(mm$x,model=new('co_dcsbm'))
expect_equal(sol@Krow, 4)
sol@Krow
plot(sol,type='tree')
Xc=Jazz_full$X[rowSums(Jazz_full$X)>2,]
Xc=Xc[,colSums(Xc)>2]
dim(Xc)
sol=greed(Xc,K=40,alg=new("hybrid"))
plot(sol)
plot(sol,type='tree')
plot(sol)
plot(sol)
library(greed)
plot(sol)
library(greed)
plot(sol)
?ggplot2::scale_x_continuous
?ggplot2::scale_alpha_continuous
library(greed)
plot(sol)
library(greed)
plot(sol)
library(greed)
plot(sol)
library(greed)
plot(sol)
library(greed)
plot(sol)
?ggplot2::scale_x_continuous
library(greed)
?ggplot2::scale_x_continuous
plot(sol)
devtools::document()
library(greed)
plot(sol)
data("Xvlegislature")
Xc=Xvlegislature$X
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
plot(sol)
plot(sol,type='tree')
sol
plot(cut(sol,17),type='tree')
plot(cut(sol,17))
plan(sequential)
devtools::test()
data("Jazz_full")
model=new("co_dcsbm")
Xc=Jazz_full$X[rowSums(Jazz_full$X)>2,]
Xc=Xc[,colSums(Xc)>2]
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
library(Matrix)
library(greed)
data("Jazz_full")
model=new("co_dcsbm")
Xc=Jazz_full$X[rowSums(Jazz_full$X)>2,]
Xc=Xc[,colSums(Xc)>2]
library(future)
plan(multisession)
sol=greed(Xc,K=40,alg=new("hybrid"))
sol@obs_stats$co_x_counts
plot(sol)
