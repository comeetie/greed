install.packages("qwraps2")
library(qwraps2)
lazyload_cache_labels("simualgsbm", path = "paper_cache/html")
lazyload_cache_labels("simualgsbm", path = "data-raw/paper_cache/html")
Fi
apply(Fi,2,max)
Xlist[[2]]
sol=greed(Xlist[[2]]$x,model=new("sbm"))
sol=greed(Xlist[[2]]$x,model=new("sbm"),lag=new("hybrid",pop_size=50))
sol=greed(Xlist[[2]]$x,model=new("sbm"),alg=new("hybrid",pop_size=50))
sol=greed(Xlist[[2]]$x,model=new("sbm"),alg=new("hybrid",pop_size=50))
data("Blogs")
fit_blogs = greed(Blogs$X,model=new("dcsbm"))
data("Books")
fit_books = greed(Books$X,model=new("dcsbm"))
data("Football")
fit_foot = greed(Football$X,model=new("dcsbm"))
data("Jazz")
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz@path
p1=plot(fit_blogs)+ggtitle("Blogs")
p2=plot(fit_books)+ggtitle("Books")
p3=plot(fit_foot)+ggtitle("Football")
p4=plot(fit_jazz)+ggtitle("Jazz")
p5=plot(fit_blogs,type='nodelink')+ggtitle("")
p6=plot(fit_books,type='nodelink')+ggtitle("")
p7=plot(fit_foot,type='nodelink')+ggtitle("")
p8=plot(fit_jazz,type='nodelink')+ggtitle("")
p9=plot(fit_blogs,type='tree')+ggtitle("")
p10=plot(fit_books,type='tree')+ggtitle("")
p11=plot(fit_foot,type='tree')+ggtitle("")
p12=plot(fit_jazz,type='tree')+ggtitle("")
p13=plot(cut(fit_blogs,2))+ggtitle("")
p14=plot(cut(fit_books,3))+ggtitle("")
p15=plot(cut(fit_foot,10))+ggtitle("")
p16=plot(cut(fit_jazz,4))+ggtitle("")
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,nrow = 4,ncol=4,common.legend = TRUE)
data("Blogs")
fit_blogs = greed(Blogs$X,model=new("dcsbm"))
data("Books")
fit_books = greed(Books$X,model=new("dcsbm"))
data("Football")
fit_foot = greed(Football$X,model=new("dcsbm"))
data("Jazz")
fit_jazz = greed(Jazz,model=new("dcsbm"))
p9=plot(fit_blogs,type='tree')+ggtitle("")
p10=plot(fit_books,type='tree')+ggtitle("")
p11=plot(fit_foot,type='tree')+ggtitle("")
p12=plot(fit_jazz,type='tree')+ggtitle("")
plot(fit_jazz,type='tree')
fit_jazz@path
fit_jazz@cl
fit_jazz@icl
fit_jazz@ggtree
fit_jazz@K
pathjazz=fit_greed_path(list(X=Jazz,N=nrow(Jazz)),fit_jazz)
pathjazz
pathjazz@path
sapply(pathjazz@path,function(x){x$icl1})
plot(sapply(pathjazz@path,function(x){x$icl1}))
library(greed)
fit_jazz = greed(Jazz,model=new("dcsbm"))
plot(fit_jazz,type='tree')
fit_jazz
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz
plot(fit_jazz,type='tree')
fit_jazz = greed(Jazz,model=new("dcsbm"))
plot(fit_jazz,type='tree')
fit_jazz = greed(Jazz,model=new("dcsbm"))
plot(fit_jazz,type='tree')
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz = greed(Jazz,model=new("dcsbm"))
plot(fit_jazz,type='tree')
fit_jazz = greed(Jazz,model=new("dcsbm"))
plot(fit_jazz,type='tree')
lazyload_cache_labels("simualgsbm", path = "paper_cache/html")
lazyload_cache_labels("simualgsbm", path = "data-raw/paper_cache/html")
knitr::opts_chunk$set(echo = TRUE)
rFi = tibble(alg="Hybrid",nmi=sapply(1:Nbsim,function(s){NMI(Fi[,s],S[,s])}))
lazyload_cache_labels("simualgsbm", path = "data-raw/paper_cache/html")
Fi
rFi = tibble(alg="Hybrid",nmi=sapply(1:Nbsim,function(s){NMI(Fi[,s],S[,s])}))
rFi_o = tibble(alg="Greedy",nmi=sapply(1:Nbsim,function(s){NMI(Fi_o[,s],S[,s])}))
rFi_s = tibble(alg="Spectral",nmi=sapply(1:Nbsim,function(s){NMI(Fi_s[,s],S[,s])}))
rFi_si = tibble(alg="Seed",nmi=sapply(1:Nbsim,function(s){NMI(Fi_si[,s],S[,s])}))
rFi_ms = tibble(alg="Multistart",nmi=sapply(1:Nbsim,function(s){NMI(Fi_ms[,s],S[,s])}))
resSim = rFi %>% bind_rows(rFi_o) %>% bind_rows(rFi_s)%>% bind_rows(rFi_si)%>% bind_rows(rFi_ms) %>% mutate(alg=factor(alg,levels=c("Greedy","Multistart","Spectral","Seed","Hybrid")))
perf=ggplot(resSim)+geom_boxplot(aes(x=alg,y=nmi,group=alg))+geom_point(aes(x=alg,y=nmi))+xlab("")+ylab("Normalized mutual information")+theme_bw()+ggtitle("Algorithms performance comparison")
ggarrange(gen,perf)
library(ggpubr)
ggarrange(gen,perf)
gen=ggplot(fit@train_hist)+geom_boxplot(aes(x=generation,y=icl,group=generation))+geom_point(aes(x=generation,y=icl,group=generation))+
ggtitle("Evolution of ICL with respect to generations")+
theme_bw()
ggarrange(gen,perf)
rFi
min(rFi$nmi)
ggsave("hybrid_sbmsim1.pdf")
?ggsave
ggsave("hybrid_sbmsim1.pdf",width=10,height=4.5)
lazyload_cache_labels("simualgmm", path = "data-raw/paper_cache/html")
rFi = tibble(alg="Hybrid",nmi=sapply(1:Nbsim,function(s){NMI(Fi[,s],S[,s])}))
Fi
\begin{figure}[!ht]
\centering
\includegraphics[width=0.95\textwidth]{motiv_ex.png}
\caption{Motivating example for the proposed algorithms. Block matrix representation of the solutions (upper row) and cluster node link diagram (bottom row) for }
\label{fig:motiv}
\end{figure}
rFi = tibble(alg="Hybrid",nmi=sapply(1:Nbsim,function(s){NMI(Fi[,s],S[,s])}))
rFi_o = tibble(alg="Greedy",nmi=sapply(1:Nbsim,function(s){NMI(Fi_o[,s],S[,s])}))
rFi_aic = tibble(alg="EM + AIC",nmi=sapply(1:Nbsim,function(s){NMI(Fi_aic[,s],S[,s])}))
rFi_bic = tibble(alg="EM + BIC",nmi=sapply(1:Nbsim,function(s){NMI(Fi_bic[,s],S[,s])}))
rFi_icl = tibble(alg="EM + ICL",nmi=sapply(1:Nbsim,function(s){NMI(Fi_icl[,s],S[,s])}))
rFi_si = tibble(alg="Seed",nmi=sapply(1:Nbsim,function(s){NMI(Fi_si[,s],S[,s])}))
rFi_ms = tibble(alg="Multistart",nmi=sapply(1:Nbsim,function(s){NMI(Fi_ms[,s],S[,s])}))
resSim = rFi %>% bind_rows(rFi_o) %>% bind_rows(rFi_icl) %>% bind_rows(rFi_bic) %>% bind_rows(rFi_aic)%>% bind_rows(rFi_si)%>% bind_rows(rFi_ms) %>% mutate(alg=factor(alg,levels=c("EM + AIC","EM + BIC","EM + ICL","Greedy","Multistart","Seed","Hybrid")))
perf=ggplot(resSim)+geom_boxplot(aes(x=alg,y=nmi,group=alg))+geom_point(aes(x=alg,y=nmi))+xlab("")+ylab("Normalized mutual information")+theme_bw()+ggtitle("Algorithms performance comparison")
perf
rFi
rFi = tibble(alg="Hybrid",K=sapply(1:Nbsim,function(s){max(Fi[,s])}))
rFi_o = tibble(alg="Greedy",K=sapply(1:Nbsim,function(s){max(Fi_o[,s])}))
rFi_aic = tibble(alg="EM + AIC",K=sapply(1:Nbsim,function(s){max(Fi_aic[,s])}))
rFi_bic = tibble(alg="EM + BIC",K=sapply(1:Nbsim,function(s){max(Fi_bic[,s])}))
rFi_icl = tibble(alg="EM + ICL",K=sapply(1:Nbsim,function(s){max(Fi_icl[,s])}))
rFi_si = tibble(alg="Seed",K=sapply(1:Nbsim,function(s){max(Fi_si[,s])}))
rFi_ms = tibble(alg="Multistart",K=sapply(1:Nbsim,function(s){max(Fi_ms[,s])}))
resSim = rFi %>% bind_rows(rFi_o) %>% bind_rows(rFi_icl) %>% bind_rows(rFi_bic) %>% bind_rows(rFi_aic)%>% bind_rows(rFi_si)%>% bind_rows(rFi_ms) %>% mutate(alg=factor(alg,levels=c("EM + BIC","EM + AIC","EM + ICL","Greedy","Multistart","Seed","Hybrid")),K=factor(K,levels = 1:20))
kable(table(resSim))
lazyload_cache_labels("frenchpalg", path = "data-raw/paper_cache/html")
sH=tibble(icl=sapply(sol_h,function(s){s@icl}),alg="Hybrid (20)")
sol_h
sH=tibble(icl=sapply(sol_h,function(s){s@icl}),alg="Hybrid (20)")
sH50=tibble(icl=sapply(sol_h50,function(s){s@icl}),alg="Hybrid (50)")
sH100=tibble(icl=sapply(sol_h50,function(s){s@icl}),alg="Hybrid (100)")
sMs = tibble(icl=sapply(sol_ms,function(s){s@icl}),alg="Multistart")
sSeed = tibble(icl=sapply(sol_seed,function(s){s@icl}),alg="Seed")
gg=sH%>%bind_rows(sMs)%>%bind_rows(sSeed)%>%bind_rows(sH100) %>%bind_rows(sH50) %>% mutate(alg=factor(alg,levels = c("Multistart","Seed","Hybrid (20)","Hybrid (50)","Hybrid (100)")))
ggplot(gg)+geom_boxplot(aes(x=alg,group=alg,y=icl))+geom_point(aes(x=alg,y=icl))+xlab("")+ylab("ICL")+theme_bw()+ggtitle("Algorithms performance comparison")
sH100=tibble(icl=sapply(sol_h100,function(s){s@icl}),alg="Hybrid (100)")
lazyload_cache_labels("simualgmm", path = "data-raw/paper_cache/html")
Fi
rFi = tibble(alg="Hybrid",K=sapply(1:Nbsim,function(s){max(Fi[,s])}))
rFi_o = tibble(alg="Greedy",K=sapply(1:Nbsim,function(s){max(Fi_o[,s])}))
rFi_aic = tibble(alg="EM + AIC",K=sapply(1:Nbsim,function(s){max(Fi_aic[,s])}))
rFi_bic = tibble(alg="EM + BIC",K=sapply(1:Nbsim,function(s){max(Fi_bic[,s])}))
rFi_icl = tibble(alg="EM + ICL",K=sapply(1:Nbsim,function(s){max(Fi_icl[,s])}))
rFi_si = tibble(alg="Seed",K=sapply(1:Nbsim,function(s){max(Fi_si[,s])}))
rFi_ms = tibble(alg="Multistart",K=sapply(1:Nbsim,function(s){max(Fi_ms[,s])}))
resSim = rFi %>% bind_rows(rFi_o) %>% bind_rows(rFi_icl) %>% bind_rows(rFi_bic) %>% bind_rows(rFi_aic)%>% bind_rows(rFi_si)%>% bind_rows(rFi_ms) %>% mutate(alg=factor(alg,levels=c("EM + BIC","EM + AIC","EM + ICL","Greedy","Multistart","Seed","Hybrid")),K=factor(K,levels = 1:20))
resSim
ggplot(resSim)+geom_histogram(aes(x=K,group=alg))
ggplot(resSim)+geom_histogram(aes(x=K,group=alg),stat="count")
ggplot(resSim)+geom_histogram(aes(x=K,group=alg),stat="count")+facet_wrap(~alg)
ggplot(resSim %>% filter(alg!="EM + ICL"))+geom_histogram(aes(x=K,group=alg),stat="count")+facet_wrap(~alg)
ggplot(resSim %>% filter(alg!="EM + ICL"))+geom_histogram(aes(x=K,group=alg),stat="count")+facet_wrap(~alg)+theme_bw()
ggsave("simu_mm1K.pdf,width=10,height=6")
ggsave("simu_mm1K.pdf",width=10,height=6")
""
ggsave("simu_mm1K.pdf",width=10,height=6)
perf=ggplot(resSim)+geom_boxplot(aes(x=alg,y=nmi,group=alg))+geom_point(aes(x=alg,y=nmi))+xlab("")+ylab("Normalized mutual information")+theme_bw()+ggtitle("Algorithms performance comparison")
perf
rFi = tibble(alg="Hybrid",nmi=sapply(1:Nbsim,function(s){NMI(Fi[,s],S[,s])}))
rFi_o = tibble(alg="Greedy",nmi=sapply(1:Nbsim,function(s){NMI(Fi_o[,s],S[,s])}))
rFi_aic = tibble(alg="EM + AIC",nmi=sapply(1:Nbsim,function(s){NMI(Fi_aic[,s],S[,s])}))
rFi_bic = tibble(alg="EM + BIC",nmi=sapply(1:Nbsim,function(s){NMI(Fi_bic[,s],S[,s])}))
rFi_icl = tibble(alg="EM + ICL",nmi=sapply(1:Nbsim,function(s){NMI(Fi_icl[,s],S[,s])}))
rFi_si = tibble(alg="Seed",nmi=sapply(1:Nbsim,function(s){NMI(Fi_si[,s],S[,s])}))
rFi_ms = tibble(alg="Multistart",nmi=sapply(1:Nbsim,function(s){NMI(Fi_ms[,s],S[,s])}))
resSim = rFi %>% bind_rows(rFi_o) %>% bind_rows(rFi_icl) %>% bind_rows(rFi_bic) %>% bind_rows(rFi_aic)%>% bind_rows(rFi_si)%>% bind_rows(rFi_ms) %>% mutate(alg=factor(alg,levels=c("EM + AIC","EM + BIC","EM + ICL","Greedy","Multistart","Seed","Hybrid")))
perf=ggplot(resSim)+geom_boxplot(aes(x=alg,y=nmi,group=alg))+geom_point(aes(x=alg,y=nmi))+xlab("")+ylab("Normalized mutual information")+theme_bw()+ggtitle("Algorithms performance comparison")
perf
perf=ggplot(resSim %>% filter(alg!="EM + ICL"))+geom_boxplot(aes(x=alg,y=nmi,group=alg))+geom_point(aes(x=alg,y=nmi))+xlab("")+ylab("Normalized mutual information")+theme_bw()+ggtitle("Algorithms performance comparison")
perf
resSim %>% group_by(alg) %>% summarise(mnmi=median(nmi))
resSim %>% group_by(alg) %>% summarise(mnmi=mean(nmi))
rFi = tibble(alg="Hybrid",nmi=sapply(1:Nbsim,function(s){NMI(Fi[,s],S[,s])}))
rFi_o = tibble(alg="Greedy",nmi=sapply(1:Nbsim,function(s){NMI(Fi_o[,s],S[,s])}))
rFi_aic = tibble(alg="EM + AIC",nmi=sapply(1:Nbsim,function(s){NMI(Fi_aic[,s],S[,s])}))
rFi_bic = tibble(alg="EM + BIC",nmi=sapply(1:Nbsim,function(s){NMI(Fi_bic[,s],S[,s])}))
rFi_icl = tibble(alg="EM + ICL",nmi=sapply(1:Nbsim,function(s){NMI(Fi_icl[,s],S[,s])}))
rFi_si = tibble(alg="Seed",nmi=sapply(1:Nbsim,function(s){NMI(Fi_si[,s],S[,s])}))
rFi_ms = tibble(alg="Multistart",nmi=sapply(1:Nbsim,function(s){NMI(Fi_ms[,s],S[,s])}))
resSim = rFi %>% bind_rows(rFi_o) %>% bind_rows(rFi_bic) %>% bind_rows(rFi_aic)%>% bind_rows(rFi_si)%>% bind_rows(rFi_ms) %>% mutate(alg=factor(alg,levels=c("EM + BIC","EM + AIC","Greedy","Multistart","Seed","Hybrid")))
perf=ggplot(resSim)+geom_boxplot(aes(x=alg,y=nmi,group=alg))+geom_point(aes(x=alg,y=nmi))+xlab("")+ylab("Normalized mutual information")+theme_bw()+ggtitle("Algorithms performance comparison")
perf
rFi
hist(rFi)
hist(rFi$nmi)
perf
ggsave("simmm2.pdf",width=0.75*6,4.5)
ggsave("simmm2.pdf",width=0.75*6,height=4.5)
0.75*5
N=1500
K=15
pi=rep(1/K,K)
lambda  = 0.1
lambda_o = 0.025
Ks=5
mu = bdiag(lapply(1:(K/Ks), function(k){matrix(lambda_o,Ks,Ks)+diag(rep(lambda,Ks))}))+0.001
sbm = rsbm(N,pi,mu)
sol=greed(sbm$x)
plot(sol,type='front')
plot(sol,type='tree')
plot(cut(sol,5),type='tree')
plot(cut(sol,4),type='tree')
sol@ggtree
plot(sol@ggtree$H)
plot(sort(sol@ggtree$H))
diff(sort(sol@ggtree$H))
sol=greed(sbm$x)
diff(sort(sol@ggtree$H))
plot(sol,type='path')
data("data/FrenchParliament")
data("FrenchParliament")
sol=greed(FrenchParliament$X)
plot(sol,type='path')
plot(sol,type='front')
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
#ggfront= sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront = merge(sol@ggtree[,c("H","K")],ggicl)
ggfront$x = -ggfront$H
ggfront = ggfront[order(ggfront$x)[1:sol@K],]
ggfront$xp = c(min(ggfront$x)-0.05*diff(range(gg
front$x)), ggfront$x[1:(nrow(ggfront)-1)])
ggfront$xp = c(min(ggfront$x)-0.05*diff(range(ggfront$x)), ggfront$x[1:(nrow(ggfront)-1)])
ggfront = ggfront[ggfront$x!=ggfront$xp,]
ggicl
ggfront
ggicl %>% anti_join(ggfront)
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
#ggfront= sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront = merge(sol@ggtree[,c("H","K")],ggicl)
ggfront$x = -ggfront$H
ggfront = ggfront[order(ggfront$x)[1:sol@K],]
ggfront$xp = c(min(ggfront$x)-0.05*diff(range(ggfront$x)), ggfront$x[1:(nrow(ggfront)-1)])
ggfront = ggfront[ggfront$x!=ggfront$xp,]
ggnofront = ggicl %>% anti_join(ggfront)
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='pink')+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the French parliament vote dataset. ")+xlim(c(-5000,0))
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the French parliament vote dataset. ")+xlim(c(-500,0))
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the French parliament vote dataset. ")+xlim(c(-1000,0))
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the French parliament vote dataset. ")+xlim(c(-2000,0))
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the French parliament vote dataset. ")
ggsave("paretofront.pdf",width=6,height = 4)
sol=greed(sbm$x)
plot(sol,type='front')
sol=greed(FrenchParliament$X)
plot(sol,type='tree')
greed::dendo(sol)
greed:::dendo(sol)
data("Jazz")
sol=greed(Jazz)
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
#ggfront= sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront = merge(sol@ggtree[,c("H","K")],ggicl)
ggfront$x = -ggfront$H
ggfront = ggfront[order(ggfront$x)[1:sol@K],]
ggfront$xp = c(min(ggfront$x)-0.05*diff(range(ggfront$x)), ggfront$x[1:(nrow(ggfront)-1)])
ggfront = ggfront[ggfront$x!=ggfront$xp,]
ggnofront = ggicl %>% anti_join(ggfront)
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the French parliament vote dataset. ")
plot(sol,type='tree')
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the Jazz dataset. ")
ggsave("paretofront.pdf",width=6,height = 4)
plot(sol,type='tree')
plot(sol,type='tree')+ggitle("Dendogram for the Jazz muusician network")
plot(sol,type='tree')+ggtitle("Dendogram for the Jazz muusician network")
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the Jazz musician network. ")
ggsave("paretofront.pdf",width=6,height = 4)
plot(sol,type='tree')+ggtitle("Dendogram for the Jazz muusician network")
plot(sol,type='tree')+ggtitle("Dendogram for the Jazz musician network")
ggsave("dendogram.pdf",width=6,height = 4)
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=K),alpha=0.2)+
#ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
#ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
#ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the Jazz musician network. ")
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=K),alpha=0.2)+
#ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
#ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
#ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the Jazz musician network. ")
icl = c(sol@icl,sapply(sol@path,function(v){v$icl1}))
ggicl = data.frame(icl = icl[length(icl):1], K  = 1:length(icl))
#ggfront= sol@ggtree %>% mutate(x=-H) %>% select(x,K) %>% arrange(x) %>% head(sol@K) %>% left_join(ggicl) %>% mutate(xp=lag(x))
ggfront = merge(sol@ggtree[,c("H","K")],ggicl)
ggfront$x = -ggfront$H
ggfront = ggfront[order(ggfront$x)[1:sol@K],]
ggfront$xp = c(min(ggfront$x)-0.05*diff(range(ggfront$x)), ggfront$x[1:(nrow(ggfront)-1)])
ggfront = ggfront[ggfront$x!=ggfront$xp,]
ggnofront = ggicl %>% anti_join(ggfront)
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=K),alpha=0.2)+
#ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
#ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
#ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the Jazz musician network. ")
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=K),alpha=0.2)
ggicl
ggplot2::ggplot()+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+
ggplot2::geom_abline(data=ggnofront,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=1,color='red',linetype="dashed")+
ggplot2::geom_point(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1)))+
ggplot2::geom_segment(data=ggfront,ggplot2::aes_(x=~x,y=~icl+x*(K-1),xend=~xp,yend=~icl+xp*(K-1)))+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(min(ggfront$xp),0))+
ggplot2::ylab("ICL")+
ggplot2::ggtitle(paste0(toupper(sol@model@name)," model with : ",max(sol@cl)," clusters."))+
ggplot2::theme_bw()+ggtitle("Pareto front extracted on the Jazz musician network. ")
ggplot(ggicl)+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1),alpha=0.2)+xlim(-1700,0)+ylim(c(-33000,-29000))
ggplot(ggicl)+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=K),alpha=1)+xlim(-1700,0)+ylim(c(-33000,-29000))+theme_bw()
ggplot(ggicl)+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=~K),alpha=1)+xlim(-1700,0)+ylim(c(-33000,-29000))+theme_bw()
ggplot(ggicl)+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=~K),alpha=1)+xlim(-1700,0)+ylim(c(-33000,-29000))+theme_bw()+xlab(expression(paste("log(",alpha,")"))
ggplot(ggicl)+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=~K),alpha=1)+xlim(-1700,0)+ylim(c(-33000,-29000))+theme_bw()+xlab(expression(paste("log(",alpha,")")))
ggplot(ggicl)+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=~K),alpha=1)+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(-1700,0))+
ylim(c(-33000,-29000))+
theme_bw()+xlab(expression(paste("log(",alpha,")")))
ggplot(ggicl)+ggplot2::geom_abline(data=ggicl,ggplot2::aes_(intercept=~icl,slope=~K-1,color=~K),alpha=1)+
ggplot2::scale_x_continuous(expression(paste("log(",alpha,")")),limits = c(-1700,0))+
ylim(c(-33000,-29000))+ylab("ICL")+
theme_bw()+xlab(expression(paste("log(",alpha,")")))
ggsave("lines.pdf",width=6,height = 4)
sol
lazyload_cache_labels("realdatadcsbm", path = "data-raw/paper_cache/html")
p1=plot(fit_blogs)+ggtitle("Blogs")
fit_blogs
p1=plot(fit_blogs)+ggtitle("Blogs")
p2=plot(fit_books)+ggtitle("Books")
p3=plot(fit_foot)+ggtitle("Football")
p4=plot(fit_jazz)+ggtitle("Jazz")
p6=plot(fit_books,type='nodelink')+ggtitle("")
p8=plot(fit_jazz,type='nodelink')+ggtitle("")
p10=plot(fit_books,type='tree')+ggtitle("")
p12=plot(fit_jazz,type='tree')+ggtitle("")
p13=plot(cut(fit_blogs,2))+ggtitle("")
p15=plot(cut(fit_foot,10))+ggtitle("")
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,nrow = 4,ncol=4,common.legend = TRUE)
ggsave("real_graphs.pdf",width=12,height=12)
fit_jazz
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz = greed(Jazz,model=new("dcsbm"))
fit_jazz = greed(Jazz,model=new("dcsbm"))
plot(fit_jazz,type='tree')+ggtitle("")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
p1=plot(fit_blogs)+ggtitle("Blogs")
p2=plot(fit_books)+ggtitle("Books")
lazyload_cache_labels("realdatadcsbm", path = "data-raw/realnetex_cache/latex")
library(ggplot2)
lazyload_cache_labels("realdatadcsbm", path = "data-raw/realnetex_cache/latex")
library(ggplot2)
library(ggpubr)
p1=plot(fit_blogs)+ggtitle("Blogs")
fit_blogs
p1=plot(fit_blogs)+ggtitle("Blogs")
p2=plot(fit_books)+ggtitle("Books")
p3=plot(fit_foot)+ggtitle("Football")
p4=plot(fit_jazz)+ggtitle("Jazz")
p5=plot(fit_blogs,type='nodelink')+ggtitle("")
p7=plot(fit_foot,type='nodelink')+ggtitle("")
p9=plot(fit_blogs,type='tree')+ggtitle("")
p11=plot(fit_foot,type='tree')+ggtitle("")
p13=plot(cut(fit_blogs,2))+ggtitle("")
p15=plot(cut(fit_foot,10))+ggtitle("")
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,nrow = 4,ncol=4,common.legend = TRUE)
p6=plot(fit_books,type='nodelink')+ggtitle("")
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,nrow = 4,ncol=4,common.legend = TRUE)
p8=plot(fit_jazz,type='nodelink')+ggtitle("")
p9=plot(fit_blogs,type='tree')+ggtitle("")
p10=plot(fit_books,type='tree')+ggtitle("")
p11=plot(fit_foot,type='tree')+ggtitle("")
p12=plot(fit_jazz,type='tree')+ggtitle("")
p13=plot(cut(fit_blogs,2))+ggtitle("")
p14=plot(cut(fit_books,3))+ggtitle("")
p15=plot(cut(fit_foot,10))+ggtitle("")
p16=plot(cut(fit_jazz,5))+ggtitle("")
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,nrow = 4,ncol=4,common.legend = TRUE)
install.packages("cba")
d <- dist(matrix(runif(30), ncol=2))
hc <- hclust(d)
co <- order.optimal(d, hc$merge)
### compare dendrograms
ho <- hc
ho$merge <- co$merge
ho$order <- co$order
op <- par(mfrow=c(2,2), pty="s")
plot(hc, main="hclust")
plot(ho, main="optimal")
# compare images
implot(d[[hc$order]])
implot(d[[co$order]])
par(op)
### compare lengths
order.length(d, hc$order)
order.length(d, co$order)
cat("compare: ",co$length,"\n")
library(cba)
d <- dist(matrix(runif(30), ncol=2))
hc <- hclust(d)
co <- order.optimal(d, hc$merge)
### compare dendrograms
ho <- hc
ho$merge <- co$merge
ho$order <- co$order
op <- par(mfrow=c(2,2), pty="s")
plot(hc, main="hclust")
plot(ho, main="optimal")
# compare images
implot(d[[hc$order]])
implot(d[[co$order]])
par(op)
### compare lengths
order.length(d, hc$order)
order.length(d, co$order)
cat("compare: ",co$length,"\n")
co$order
d
sol
sol=fit_books
sol@path
d <- dist(matrix(runif(30), ncol=2))
hc <- hclust(d)
hc$merge
sol@path
