str_split(imdb$genre)
str_split(imdb$genre,",")
str_split(imdb$Genre,",")
map(str_split(imdb$Genre,","),function(g){g[1]})
unlist(map(str_split(imdb$Genre,","),function(g){g[1]}))
G1=unlist(map(str_split(imdb$Genre,","),function(g){g[1]}))
trable(G1,sol@clrow)
table(G1,sol@clrow)
G1=unlist(map(str_split(imdb$Genre,","),function(g){g[2]}))
table(G1,sol@clrow)
table(grepl("Western",imdb$Genre),sol@clrow)
table(grepl("Thriller",imdb$Genre),sol@clrow)
table(grepl("Romance",imdb$Genre),sol@clrow)
table(grepl("Horror",imdb$Genre),sol@clrow)
table(grepl("Comedy",imdb$Genre),sol@clrow)
Actors[sol@clcol==1]
Actors[sol@clcol==2]
Actors[sol@clcol==3]
Actors[sol@clcol==4]
Actors[sol@clcol==5]
Actors[sol@clcol==6]
Actors[sol@clcol==7]
Actors[sol@clcol==8]
Actors[sol@clcol==9]
Actors[sol@clcol==8]
unqie(imdb$Director[sol@clrow==8])
unique(imdb$Director[sol@clrow==8])
unique(imdb$Director[sol@clrow==1])
unique(imdb$Director[sol@clrow==2])
unique(imdb$Director[sol@clrow==3])
imdb$Rating
table(round(imdb$Rating),sol@clrow)
edges <- read.table("malaria.edgelist");  ## edgelist
types <- read.table("malaria.types");     ## nodeType
M=sparseMatrix(edges[,1],edges[,2],x = rep(1,nrow(edges)))
Mc=M[which(types==1),which(types==2)]
sol=greed(Mc)
sol=greed(Mc,K=40)
plot(sol)
plot(sol,type='nodelink')
plot(sol,type='tree')
plot(cut(sol,8))
sol=greed(Mc,K=40,alg=new("seed"))
sol
sol=greed(Mc,K=40,alg=new("seed"))
sol
sol=greed(Mc,K=40,alg=new("seed"))
sol=greed(Mc,K=40,alg=new("seed"))
sol
dim(Mc)
library(greed)
data(Blogs)
all(Blogs$X==t(Blogs$X))
library(Matrix)
all(Blogs$X==t(Blogs$X))
Blogs$X
Blogs$X-t(Blogs$X)
greed::spectral(Blogs$X)
greed::spectral
getwd()
library(rvest)
bands_source= read_html("http://www.redhotjazz.com/band_body.html")
bands = bands_source %>% html_node(xpath = "/html/body/center/table") %>% html_table(header = TRUE)
bands_url = bands_source %>% html_node(xpath = "/html/body/center/table") %>% html_nodes("a") %>% html_attr("href")
bands$url = bands_url
bands
bands_name = bands_source %>% html_node(xpath = "/html/body/center/table") %>% html_nodes("a") %>% html_text()
bands_name
length(bands_name)
length(bands_url)
dim(bands)
bands_details=tibble::tibble(name=bdans_name,url=bands_url) %>% left_join(bands,by=c("name"="Name of the Band"))
bands_details=tibble::tibble(name=bands_name,url=bands_url) %>% left_join(bands,by=c("name"="Name of the Band"))
library(dplyr)
bands_url = bands_source %>% html_node(xpath = "/html/body/center/table") %>% html_nodes("a") %>% html_attr("href")
bands_name = bands_source %>% html_node(xpath = "/html/body/center/table") %>% html_nodes("a") %>% html_text()
bands_details=tibble::tibble(name=bands_name,url=bands_url) %>% left_join(bands,by=c("name"="Name of the Band"))
dim(bands_details)
bands_details
base_url = "http://www.redhotjazz.com/"
bands_details = list()
for (u in bands_url){
print(u)
try({
source = read_html(paste(base_url,u,sep="/"))
musicians = source %>% html_node(xpath = "/html/body/center[6]/table") %>% html_table(header = TRUE,fill=TRUE)
musicians$band=u
bands_details[[u]]=musicians
})
}
bands_full=tibble::tibble(name=bands_name,url=bands_url) %>% left_join(bands,by=c("name"="Name of the Band"))
bands_details[[1]]
bands_details[[12]
bands_details[[12]]
bands_details[[12]]
do.call(rbind,bands_details)
lapply(bands_details,colnames)
sapply(bands_details,ncol)
bands_details=bands_details[sapply(bands_details,ncol)==3]
musicians_bands = do.call(rbind,bands_details)
library(purrr)
bands_details %>% keep(functino(a){ncol(a)==3})
bands_details %>% keep(function(a){ncol(a)==3})
names(bands_details[[1]])
bands_details %>% keep(function(b){colnames(b)==c("Artist","Instrument","band")})
bands_details %>% keep(function(b){all(colnames(b)==c("Artist","Instrument","band"))})
bands_details = bands_details %>% keep(function(b){all(colnames(b)==c("Artist","Instrument","band"))})
musicians_bands = do.call(rbind,bands_details)
dim(musicians_bands)
musicians_bands
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("name"="url"))
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url"))
names(musicians_bands)
?spread
??spread
tidyr::spread()
?tidyr::spread()
G = musicians_bands %>% select(Artist,band) %>% mutate(n=1) %>% spread(band,n,fill=0)
G = musicians_bands %>% select(Artist,band) %>% mutate(n=1) %>% tidyr::spread(band,n,fill=0)
G = musicians_bands %>% select(Artist,band) %>% mutate(n=1)
G
G = musicians_bands %>% select(Artist,name) %>% mutate(n=1)
G
G = musicians_bands %>% select(Artist,name) %>% mutate(n=1) %>% tidyr::spread(band,n,fill=0)
G = musicians_bands %>% select(Artist,name) %>% mutate(n=1) %>% tidyr::spread(name,n,fill=0)
G = musicians_bands %>% select(Artist,name) %>% mutate(n=1)
G[886:887,]
G = musicians_bands %>% select(Artist,name) %>% mutate(n=1,Band=name) %>% select(Artist,Band,n) %>% group_by(Artist,Band) %>% summarise(n=1)
G
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>% mutate(n=1,Band=name)
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>% rename(url=band) %>% mutate(n=1,Band=name)
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
rename(url=band) %>% mutate(n=1,Band=name)
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
rename(url=band)
musicians_bands
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
rename(url=band,Band=name) %>% mutate(n=1)
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
rename(url=band,Band=name)
musicians_bands
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% tidyr::spread(name,n,fill=0)
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% tidyr::spread(Band,n,fill=0)
G
G
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
rename(url=band,Band=as.character(name))
bands_details = bands_details %>% keep(function(b){all(colnames(b)==c("Artist","Instrument","band"))})
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
rename(url=band,Band=as.character(name))
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
mutate(name=as.character(name)) %>%
rename(url=band,Band=name)
musicians_bands = do.call(rbind,bands_details) %>% left_join(bands_full,by=c("band"="url")) %>%
mutate(name=as.character(name)) %>%
rename(url=band,Band=name)
bands_full
names(bands_full)=c("Band","url","L","Years","Recorded","Live")
bands_details = bands_details %>% keep(function(b){all(colnames(b)==c("Artist","Instrument","band"))})
musicians_bands = do.call(rbind,bands_details) %>%
left_join(bands_full,by=c("band"="url")) %>%
rename(url=band)
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% tidyr::spread(Band,n,fill=0)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% mutate(Band=as.character(Band)) %>% tidyr::spread(Band,n,fill=0)
G
Band
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% mutate(Band=as.character(Band))
G
musicians_bands
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup()
G
G = musicians_bands %>% select(Artist,Band)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup()
G
tail(G)
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist))
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist),grepl("?",Artistn))
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist),grepl("?",Artist))
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist),!grepl("?",Artist))
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist)) %>% tidyr::spread(Band,n,fill=0)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist))
G
tail(G)
spread(G[1000:200,],Band,n)
tidyr::spread(G[1000:200,],Band,n)
tidyr::spread(G[1:1000,],Band,n)
tidyr::spread(G[1:2000,],Band,n)
tidyr::spread(G[1:4000,],Band,n)
tidyr::spread(G[1:3000,],Band,n)
tidyr::spread(G[1:2500,],Band,n)
tidyr::spread(G[1:2400,],Band,n)
tidyr::spread(G[1:2300,],Band,n)
tidyr::spread(G[1:2200,],Band,n)
tidyr::spread(G[1:2100,],Band,n)
G[2100:2150,]
View(G[2100:2200,])
?as.character(G[,2])
as.character(G[,2])
as.character(G[,2])[2251]
as.character(G[,2])[2250]
as.character(G[,2])
as.character(G[,2])[1]
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist)) %>% mutate(Band=as.character(Band))
G[2251,]
G[2151,]
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist)) %>% mutate(Band=as.character(Band))%>% tidyr::spread(Band,n,fill=0)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist)) %>% mutate(Band=as_ut8_character(Band))%>% tidyr::spread(Band,n,fill=0)
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist)) %>% mutate(Band=as_utf8_character(Band))%>% tidyr::spread(Band,n,fill=0)
library(rlang)
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist)) %>% mutate(Band=as_utf8_character(Band))%>% tidyr::spread(Band,n,fill=0)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>% filter(!is.na(Artist)) %>% mutate(Band=stringi::stri_unescape_unicode(Band))%>% tidyr::spread(Band,n,fill=0)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>%
filter(!is.na(Artist),!grepl("?",Artist)) %>%
mutate(Band=gsub('[\n]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band))%>% tidyr::spread(Band,n,fill=0)
G
grepl("?",musicians_bands)
grepl("\?",musicians_bands)
grepl("\\?",musicians_bands)
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>%
filter(!is.na(Artist),!grepl("\\?",Artist)) %>%
mutate(Band=gsub('[\n]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band))%>% tidyr::spread(Band,n,fill=0)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>%
filter(!is.na(Artist),!grepl("\\?",Artist)) %>%
mutate(Band=gsub('[\n,\r]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band))%>% tidyr::spread(Band,n,fill=0)
G
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>%
filter(!is.na(Artist),!grepl("\\?",Artist)) %>%
mutate(Band=gsub('[\n,\r]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band))%>%
mutate(Artist=gsub('[\n,\r,\\",\\,\.,_,-]','',Artist)) %>%
mutate(Artist=stringi::stri_unescape_unicode(Artist))%>%
tidyr::spread(Band,n,fill=0)
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>%
filter(!is.na(Artist),!grepl("\\?",Artist)) %>%
mutate(Band=gsub('[\n,\r]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band))%>%
mutate(Artist=gsub('[\n,\r,\\",\\,\.,_,-]','',Artist))
G = musicians_bands %>% select(Artist,Band) %>% group_by(Artist,Band) %>%
summarise(n=1) %>% ungroup() %>%
filter(!is.na(Artist),!grepl("\\?",Artist)) %>%
mutate(Band=gsub('[\n,\r]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band))%>%
mutate(Artist=gsub('[\n,\r,\\",\\,\\.,_,-]','',Artist)) %>%
mutate(Artist=stringi::stri_unescape_unicode(Artist))%>%
tidyr::spread(Band,n,fill=0)
G
dim(G)
rowSums(G)
X = as.matrix(G[,-1])
rownames(X)=G[,1]
dim(X)
dim(G)
rownames(X)
row.names(X)=G[,1]
row.names(X)=G$Artist
rownames(X)=G$Artist
rownames(X)=G$Artist
library(Matrix)
X
library(greed)
sol=greed(X)
plot(sol)
dim(X)
bands_full
rownames(X)[sol@clrow==1]
rownames(X)[sol@clrow==2]
colnames(X)[sol@clcol==2]
colnames(X)[sol@clcol==3]
colnames(X)[sol@clcol==4]
colnames(X)[sol@clcol==5]
colnames(X)[sol@clcol==6]
colnames(X)[sol@clcol==7]
colnames(X)[sol@clcol==8]
colnames(X)[sol@clcol==9]
colnames(X)[sol@clcol==10]
colnames(X)[sol@clcol==11]
colnames(X)[sol@clcol==12]
grep("Louis",colnames(X))
sol@clcol[grep("Louis",colnames(X))]
plot(sol,type='nodelink')
X
Bands_Graph=t(X)%*%X
dim(Bands_Graph)
dim(X)
Bands_Graph
sol=greed(Bands_Graph)
plot(sol)
plot(sol,type='tree')
names(Bands_Graph)[sol@cl==1]
names(Bands_Graph)
rownames(Bands_Graph)
rownames(Bands_Graph)[sol@cl==1]
rownames(Bands_Graph)[sol@cl==2]
rownames(Bands_Graph)[sol@cl==3]
rownames(Bands_Graph)[sol@cl==4]
rownames(Bands_Graph)[sol@cl==5]
rownames(Bands_Graph)[sol@cl==6]
rownames(Bands_Graph)[sol@cl==7]
rownames(Bands_Graph)[sol@cl==11]
rownames(Bands_Graph)[sol@cl==25]
rownames(Bands_Graph)[sol@cl==35]
rownames(Bands_Graph)[sol@cl==45]
plot(sol)
plot(cut(sol,25))
plot(cut(sol,5))
sol5=cut(sol,5)
rownames(Bands_Graph)[sol5@cl==2]
rownames(Bands_Graph)[sol5@cl==4]
rownames(Bands_Graph)[sol5@cl==1]
plot(sol,type='tree')
sol5=cut(sol,9)
plot(cut(sol,9))
plot(cut(sol,12))
bands_full
plot(cut(sol,25))
plot(cut(sol,15))
plot(cut(sol,16))
plot(cut(sol,12))
sol12=cut(sol,12)
rownames(Bands_Graph)[sol12@cl==3]
rownames(Bands_Graph)[sol12@cl==6]
rownames(Bands_Graph)[sol12@cl==8]
rownames(Bands_Graph)[sol12@cl==9]
rownames(Bands_Graph)[sol12@cl==10]
rownames(Bands_Graph)[sol12@cl==11]
rownames(Bands_Graph)[sol12@cl==12]
plot(sol,type='nodelink')
plot(sol12,type='nodelink')
plot(sol12)
sol12@obs_stats$x_counts
sol@cl[grep("Louis ",colnames(Bands_Graph))]
rownames(Bands_Graph)[sol@cl==40]
rownames(Bands_Graph)[sol@cl==41]
rownames(Bands_Graph)[sol@cl==7]
rownames(Bands_Graph)[sol@cl==41]
rownames(Bands_Graph)
sol@cl[grep("Louis ",colnames(Bands_Graph))]
rownames(Bands_Graph)[sol@cl==36]
rownames(Bands_Graph)[sol@cl==44]
rownames(Bands_Graph)[sol@cl==59]
sol@cl[grep("New York ",colnames(Bands_Graph))]
sol@cl[grep("Chic ",colnames(Bands_Graph))]
sol@cl[grep("Chicago",colnames(Bands_Graph))]
sol@cl[grep("Detroit",colnames(Bands_Graph))]
sol@cl[grep("Orlean",colnames(Bands_Graph))]
greed:::spy(Bands_Graph[order(so@cl),order(sol@cl)])
greed:::spy(Bands_Graph[order(sol@cl),order(sol@cl)])
Bands_Graph[order(sol@cl)[1:10],order(sol@cl)[1:10]]
image(Bands_Graph[order(sol@cl)[1:50],order(sol@cl)[1:50]])
X
bands_full
bands_full=bands_full%>%mutate(Band=gsub('[\n,\r]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band))
library(Matrix)
Xns = as.matrix(G[,-1])
rownames(Xns)=G$Artist
Xns = as.matrix(G[,-1])
rownames(Xns)=G$Artist
ij=which(X,arr.ind = TRUE)
ij=which(X>0,arr.ind = TRUE)
X=sparseMatrix(ij[,1],ij[,2],x = Xns[ij])
rownames(X)=rownames(Xns)
dim(X)
data("Xvlegislature")
col_meta=tibble(Band=colnames(X)) %>% left_join(bands_full)
colnames(X)=colnames(Xns)
rownames(X)=rownames(Xns)
col_meta=tibble(Band=colnames(X)) %>% left_join(bands_full)
col_meta
dim(col_meta)
dim(X)
col_meta=tibble(Band=colnames(X)) %>% left_join(bands_full %>% filter(!duplicated(Band)))
dim(col_meta)
col_meta
bands_full %>% goup_by(Band) %>% summarise(url=paste(url,sep=","),Years=paste(url,sep=","))
bands_full %>% group_by(Band) %>% summarise(url=paste(url,sep=","),Years=paste(url,sep=","))
bands_full %>% group_by(Band) %>% summarise(url=paste(url,collapse=","),Years=paste(url,sep=","))
bands_full %>% group_by(Band) %>% summarise(url=paste(url,collapse=","),Years=paste(Years,collapse=","))
bands_full %>% group_by(Band) %>% summarise(url=paste(url,collapse=","),Years=paste(Years,collapse=","),Recorded=Years=paste(Ecorded,collapse=","),Live=paste(Live,collapse=","))
bands_full %>% group_by(Band) %>% summarise(url=paste(url,collapse=","),Years=paste(Years,collapse=","),Recorded=paste(Recorded,collapse=","),Live=paste(Live,collapse=","))
bands_full=bands_full%>%mutate(Band=gsub('[\n,\r]','',Band)) %>%
mutate(Band=stringi::stri_unescape_unicode(Band)) %>% group_by(Band) %>%
summarise(url=paste(url,collapse=","),Years=paste(Years,collapse=","),Recorded=paste(Recorded,collapse=","),Live=paste(Live,collapse=","))
col_meta=tibble(Band=colnames(X)) %>% left_join(bands_full)
dim(col_meta)
dim(X)
Jazz_full=list(X=X,col_meta=col_meta)
devtools::use_data(Jazz_full)
Xb= t(X) %>% X
Xb= t(X) %*% X
dim(Xb)
diag(Xb)=0
Xb[Xb>1]=1
sol=greed(Xb)
plot(sol)
plot(sol,type='tree')
plot(cut(sol,7))
plot(cut(sol,10))
Xm= X %*% t(X)
diag(Xm)=0
Xm[Xm>1]=1
sol=greed(Xm)
plot(sol)
grep("Louis",colnames(Xm))
colnames(Xm)[grep("Louis",colnames(Xm))]
sol@cl[3025]
sol@cl[3024]
colnames(Xm)[sol@cl==14]
plot(sol,type='tree')
plot(cut(sol,2))
plot(cut(sol,5))
plot(cut(sol,10))
plot(cut(sol,12))
plot(cut(sol,25))
sol=greed(X,K=40)
library(future)
sol=greed(X,K=40)
plan(multisession())
plan(multisession)
sol=greed(X,K=40)
plot(sol)
sol@clrow[3024]
rownames(X)[sol@clrow==11]
rownames(X)[sol@clrow==7]
colnames(X)[sol@clcol==8]
plot(cut(sol,4))
plot(cut(sol,4),type='tree')
cut(sol,4)
cut(sol,4)@obs_stats
rownames(X)
plot(sol)
rownames(X)[sol@clrow==9]
res=tibble(Artist=rowname(X),cl=sol@cl,nbg=rowSums(X))
res=tibble(Artist=rownames(X),cl=sol@cl,nbg=rowSums(X))
res=tibble(Artist=rownames(X),cl=sol@clrow,nbg=rowSums(X))
res%>%group_by(cl) %>% top_n(n=nbg,5)
res%>%group_by(cl) %>% top_n(n=nbg)
res%>%group_by(cl) %>% top_n(nbg)
res
res %>% group_by(cl) %>% top_n(5,nbg)
res %>% group_by(cl) %>% top_n(5,nbg) %>% desc(cl,nbg)
res %>% group_by(cl) %>% top_n(5,nbg) %>% arrange(cl,nbg)
View(res %>% group_by(cl) %>% top_n(5,nbg) %>% arrange(cl,nbg))
colnames(X)[sol@clcol==4]
colnames(X)[sol@clcol==5]
sol
sol=greed(X,K=40,alg=new("seed"))
sol
sol=greed(X,K=40,alg=new("hybrid",pop_size=40))
sol
plot(sol)
sol=greed(X,K=40,alg=new("seed"))
sol
plot(sol)
sol
plot(sol,type='tree')
sol=greed(X,K=30,alg=new("seed"))
sol
plot(sol)
co_blocks(sol)
greed::co_blocks(sol)
greed:::co_blocks(sol)
sol@obs_stats$co_x_counts
sol@Kcol
library(greed)
sol@clcol
clusters_type = apply(table(sol@cl,c(rep(1,sol@Nrow),rep(2,sol@Ncol))),1,which.max)
table(sol@cl,c(rep(1,sol@Nrow),rep(2,sol@Ncol)))
rowSums(X)
range(rowSums(X))
range(colSums(X))
library(greed)
data(galaxy)
library(mclust)
data(galaxy)
